

================================================================
== Vivado HLS Report for 'toplevel'
================================================================
* Date:           Wed Mar  9 15:36:45 2016

* Version:        2015.4 (Build 1412921 on Wed Nov 18 09:58:55 AM 2015)
* Project:        md5core
* Solution:       solution1
* Product family: spartan3e
* Target device:  xc3s500efg320-4


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  20.00|     16.52|        2.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+-------+-------+-------+---------+
    |    Latency    |    Interval   | Pipeline|
    |  min  |  max  |  min  |  max  |   Type  |
    +-------+-------+-------+-------+---------+
    |  21724|  22324|  21725|  22325|   none  |
    +-------+-------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------+-------+-------+-----------+-----------+-----------+------+----------+
        |              |    Latency    | Iteration |  Initiation Interval  | Trip |          |
        |   Loop Name  |  min  |  max  |  Latency  |  achieved |   target  | Count| Pipelined|
        +--------------+-------+-------+-----------+-----------+-----------+------+----------+
        |- loop_read   |     65|     65|          5|          4|          1|    16|    yes   |
        |- loop_448    |    300|    300|          1|          -|          -|   300|    no    |
        |- loop_zero   |    448|    448|          1|          -|          -|   448|    no    |
        |- loop_md5    |  20900|  21500| 209 ~ 215 |          -|          -|   100|    no    |
        | + loop_main  |    198|    203|          9|          -|          -|    22|    no    |
        +--------------+-------+-------+-----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 4, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 34
* Pipeline: 1
  Pipeline-0: II = 4, D = 5, States = { 2 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	7  / (exitcond1)
	4  / (!exitcond1)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	2  / true
7 --> 
	8  / true
8 --> 
	8  / (!exitcond2)
	9  / (exitcond2)
9 --> 
	9  / (tmp_8)
	10  / (!tmp_8)
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / (tmp_17)
	32  / (!tmp_17)
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	27  / (exitcond)
	23  / (!exitcond)
23 --> 
	24  / true
24 --> 
	27  / (exitcond_1)
	25  / (!exitcond_1)
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	31  / (exitcond) | (exitcond_1) | (exitcond_2)
	28  / (!exitcond & !exitcond_1 & !exitcond_2)
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	22  / true
31 --> 
	13  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
* FSM state operations: 

 <State 1>: 3.25ns
ST_1: stg_35 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecInterface(i32* %output_V_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: stg_36 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecInterface(i32* %input_V_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: stg_37 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i32* %input_V_V), !map !119

ST_1: stg_38 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i32* %output_V_V), !map !123

ST_1: stg_39 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @toplevel_str) nounwind

ST_1: stg_40 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecIFCore(i32* %input_V_V, [1 x i8]* @p_str19, [11 x i8]* @p_str20, [1 x i8]* @p_str19, i32 -1, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19)

ST_1: stg_41 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecIFCore(i32* %output_V_V, [1 x i8]* @p_str19, [11 x i8]* @p_str20, [1 x i8]* @p_str19, i32 -1, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19)

ST_1: stg_42 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str21, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19, [1 x i8]* @p_str19) nounwind

ST_1: stg_43 [1/1] 3.25ns
:8  store i32 0, i32* @initial_length_V, align 4

ST_1: stg_44 [1/1] 2.66ns
:9  br label %1


 <State 2>: 3.50ns
ST_2: i [1/1] 0.00ns
:1  %i = phi i5 [ 0, %0 ], [ %i_1, %._crit_edge1212 ]

ST_2: exitcond1 [1/1] 2.99ns
:2  %exitcond1 = icmp eq i5 %i, -16

ST_2: i_1 [1/1] 3.50ns
:3  %i_1 = add i5 %i, 1


 <State 3>: 7.47ns
ST_3: initial_length_V_load [1/1] 0.00ns
:0  %initial_length_V_load = phi i32 [ 0, %0 ], [ %initial_length_V_load1, %._crit_edge1212 ]

ST_3: stg_49 [1/1] 0.00ns
:4  br i1 %exitcond1, label %5, label %2

ST_3: stg_50 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_3: stg_51 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str22) nounwind

ST_3: tmp_2 [1/1] 0.00ns
:2  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str22)

ST_3: stg_53 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str19) nounwind

ST_3: tmp_V_4 [1/1] 0.00ns
:4  %tmp_V_4 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_3: tmp_6 [1/1] 0.00ns
:5  %tmp_6 = trunc i32 %tmp_V_4 to i8

ST_3: tmp_10 [1/1] 0.00ns
:6  %tmp_10 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp_V_4, i32 24, i32 31)

ST_3: icmp [1/1] 3.40ns
:7  %icmp = icmp eq i8 %tmp_10, 0

ST_3: stg_58 [1/1] 2.66ns
:8  br i1 %icmp, label %._crit_edge, label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit

ST_3: t_V_3 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:0  %t_V_3 = load i32* @initial_length_V, align 4

ST_3: phitmp1 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:1  %phitmp1 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp_V_4, i32 24, i32 31)

ST_3: tmp_13 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:2  %tmp_13 = trunc i32 %t_V_3 to i2

ST_3: newIndex [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:3  %newIndex = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %t_V_3, i32 2, i32 31)

ST_3: newIndex1 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:4  %newIndex1 = zext i30 %newIndex to i64

ST_3: msg_V_0_addr [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:5  %msg_V_0_addr = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex1

ST_3: msg_V_1_addr [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:6  %msg_V_1_addr = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex1

ST_3: msg_V_2_addr [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:7  %msg_V_2_addr = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex1

ST_3: msg_V_3_addr [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:8  %msg_V_3_addr = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex1

ST_3: stg_68 [1/1] 2.80ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:9  switch i2 %tmp_13, label %branch3 [
    i2 0, label %branch0
    i2 1, label %branch1
    i2 -2, label %branch2
  ]

ST_3: stg_69 [1/1] 2.39ns
branch2:0  store i8 %phitmp1, i8* %msg_V_2_addr, align 1

ST_3: stg_70 [1/1] 0.00ns
branch2:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit470

ST_3: stg_71 [1/1] 2.39ns
branch1:0  store i8 %phitmp1, i8* %msg_V_1_addr, align 1

ST_3: stg_72 [1/1] 0.00ns
branch1:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit470

ST_3: stg_73 [1/1] 2.39ns
branch0:0  store i8 %phitmp1, i8* %msg_V_0_addr, align 1

ST_3: stg_74 [1/1] 0.00ns
branch0:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit470

ST_3: stg_75 [1/1] 2.39ns
branch3:0  store i8 %phitmp1, i8* %msg_V_3_addr, align 1

ST_3: stg_76 [1/1] 0.00ns
branch3:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit470

ST_3: tmp_4 [1/1] 4.22ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit470:0  %tmp_4 = add i32 %t_V_3, 1

ST_3: stg_78 [1/1] 3.25ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit470:1  store i32 %tmp_4, i32* @initial_length_V, align 4

ST_3: stg_79 [1/1] 2.66ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit470:2  br label %._crit_edge

ST_3: tmp_20 [1/1] 0.00ns
._crit_edge:1  %tmp_20 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp_V_4, i32 16, i32 23)

ST_3: icmp1 [1/1] 3.40ns
._crit_edge:2  %icmp1 = icmp eq i8 %tmp_20, 0

ST_3: phitmp2 [1/1] 0.00ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit64:1  %phitmp2 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp_V_4, i32 16, i32 23)

ST_3: tmp_41 [1/1] 0.00ns
._crit_edge1210:1  %tmp_41 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp_V_4, i32 8, i32 15)

ST_3: icmp2 [1/1] 3.40ns
._crit_edge1210:2  %icmp2 = icmp eq i8 %tmp_41, 0

ST_3: phitmp [1/1] 0.00ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:1  %phitmp = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp_V_4, i32 8, i32 15)


 <State 4>: 7.47ns
ST_4: initial_length_V_load4 [1/1] 0.00ns
._crit_edge:0  %initial_length_V_load4 = phi i32 [ %tmp_4, %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit470 ], [ %initial_length_V_load, %2 ]

ST_4: stg_87 [1/1] 2.66ns
._crit_edge:3  br i1 %icmp1, label %._crit_edge1210, label %_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit64

ST_4: t_V [1/1] 0.00ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit64:0  %t_V = load i32* @initial_length_V, align 4

ST_4: tmp_21 [1/1] 0.00ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit64:2  %tmp_21 = trunc i32 %t_V to i2

ST_4: newIndex4 [1/1] 0.00ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit64:3  %newIndex4 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %t_V, i32 2, i32 31)

ST_4: newIndex5 [1/1] 0.00ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit64:4  %newIndex5 = zext i30 %newIndex4 to i64

ST_4: msg_V_0_addr_2 [1/1] 0.00ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit64:5  %msg_V_0_addr_2 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex5

ST_4: msg_V_1_addr_2 [1/1] 0.00ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit64:6  %msg_V_1_addr_2 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex5

ST_4: msg_V_2_addr_2 [1/1] 0.00ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit64:7  %msg_V_2_addr_2 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex5

ST_4: msg_V_3_addr_2 [1/1] 0.00ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit64:8  %msg_V_3_addr_2 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex5

ST_4: stg_96 [1/1] 2.80ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit64:9  switch i2 %tmp_21, label %branch7 [
    i2 0, label %branch4
    i2 1, label %branch5
    i2 -2, label %branch6
  ]

ST_4: stg_97 [1/1] 2.39ns
branch6:0  store i8 %phitmp2, i8* %msg_V_2_addr_2, align 1

ST_4: stg_98 [1/1] 0.00ns
branch6:1  br label %_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit64478

ST_4: stg_99 [1/1] 2.39ns
branch5:0  store i8 %phitmp2, i8* %msg_V_1_addr_2, align 1

ST_4: stg_100 [1/1] 0.00ns
branch5:1  br label %_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit64478

ST_4: stg_101 [1/1] 2.39ns
branch4:0  store i8 %phitmp2, i8* %msg_V_0_addr_2, align 1

ST_4: stg_102 [1/1] 0.00ns
branch4:1  br label %_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit64478

ST_4: stg_103 [1/1] 2.39ns
branch7:0  store i8 %phitmp2, i8* %msg_V_3_addr_2, align 1

ST_4: stg_104 [1/1] 0.00ns
branch7:1  br label %_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit64478

ST_4: tmp_s [1/1] 4.22ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit64478:0  %tmp_s = add i32 %t_V, 1

ST_4: stg_106 [1/1] 3.25ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit64478:1  store i32 %tmp_s, i32* @initial_length_V, align 4

ST_4: stg_107 [1/1] 2.66ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit64478:2  br label %._crit_edge1210


 <State 5>: 7.47ns
ST_5: initial_length_V_load3 [1/1] 0.00ns
._crit_edge1210:0  %initial_length_V_load3 = phi i32 [ %tmp_s, %_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit64478 ], [ %initial_length_V_load4, %._crit_edge ]

ST_5: stg_109 [1/1] 2.66ns
._crit_edge1210:3  br i1 %icmp2, label %._crit_edge1211, label %_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit

ST_5: t_V_4 [1/1] 0.00ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:0  %t_V_4 = load i32* @initial_length_V, align 4

ST_5: tmp_42 [1/1] 0.00ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:2  %tmp_42 = trunc i32 %t_V_4 to i2

ST_5: newIndex11 [1/1] 0.00ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:3  %newIndex11 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %t_V_4, i32 2, i32 31)

ST_5: newIndex12 [1/1] 0.00ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:4  %newIndex12 = zext i30 %newIndex11 to i64

ST_5: msg_V_0_addr_6 [1/1] 0.00ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:5  %msg_V_0_addr_6 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex12

ST_5: msg_V_1_addr_6 [1/1] 0.00ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:6  %msg_V_1_addr_6 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex12

ST_5: msg_V_2_addr_6 [1/1] 0.00ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:7  %msg_V_2_addr_6 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex12

ST_5: msg_V_3_addr_6 [1/1] 0.00ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:8  %msg_V_3_addr_6 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex12

ST_5: stg_118 [1/1] 2.80ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit:9  switch i2 %tmp_42, label %branch11 [
    i2 0, label %branch8
    i2 1, label %branch9
    i2 -2, label %branch10
  ]

ST_5: stg_119 [1/1] 2.39ns
branch10:0  store i8 %phitmp, i8* %msg_V_2_addr_6, align 1

ST_5: stg_120 [1/1] 0.00ns
branch10:1  br label %_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit486

ST_5: stg_121 [1/1] 2.39ns
branch9:0  store i8 %phitmp, i8* %msg_V_1_addr_6, align 1

ST_5: stg_122 [1/1] 0.00ns
branch9:1  br label %_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit486

ST_5: stg_123 [1/1] 2.39ns
branch8:0  store i8 %phitmp, i8* %msg_V_0_addr_6, align 1

ST_5: stg_124 [1/1] 0.00ns
branch8:1  br label %_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit486

ST_5: stg_125 [1/1] 2.39ns
branch11:0  store i8 %phitmp, i8* %msg_V_3_addr_6, align 1

ST_5: stg_126 [1/1] 0.00ns
branch11:1  br label %_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit486

ST_5: tmp_12 [1/1] 4.22ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit486:0  %tmp_12 = add i32 %t_V_4, 1

ST_5: stg_128 [1/1] 3.25ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit486:1  store i32 %tmp_12, i32* @initial_length_V, align 4

ST_5: stg_129 [1/1] 2.66ns
_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit486:2  br label %._crit_edge1211


 <State 6>: 7.47ns
ST_6: initial_length_V_load2 [1/1] 0.00ns
._crit_edge1211:0  %initial_length_V_load2 = phi i32 [ %tmp_12, %_ZrsILi33ELb1EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit486 ], [ %initial_length_V_load3, %._crit_edge1210 ]

ST_6: tmp_14 [1/1] 3.40ns
._crit_edge1211:1  %tmp_14 = icmp eq i8 %tmp_6, 0

ST_6: stg_132 [1/1] 2.66ns
._crit_edge1211:2  br i1 %tmp_14, label %._crit_edge1212, label %3

ST_6: t_V_5 [1/1] 0.00ns
:0  %t_V_5 = load i32* @initial_length_V, align 4

ST_6: tmp_43 [1/1] 0.00ns
:1  %tmp_43 = trunc i32 %t_V_5 to i2

ST_6: newIndex15 [1/1] 0.00ns
:2  %newIndex15 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %t_V_5, i32 2, i32 31)

ST_6: newIndex16 [1/1] 0.00ns
:3  %newIndex16 = zext i30 %newIndex15 to i64

ST_6: msg_V_0_addr_9 [1/1] 0.00ns
:4  %msg_V_0_addr_9 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex16

ST_6: msg_V_1_addr_9 [1/1] 0.00ns
:5  %msg_V_1_addr_9 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex16

ST_6: msg_V_2_addr_9 [1/1] 0.00ns
:6  %msg_V_2_addr_9 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex16

ST_6: msg_V_3_addr_9 [1/1] 0.00ns
:7  %msg_V_3_addr_9 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex16

ST_6: stg_141 [1/1] 2.80ns
:8  switch i2 %tmp_43, label %branch15 [
    i2 0, label %branch12
    i2 1, label %branch13
    i2 -2, label %branch14
  ]

ST_6: stg_142 [1/1] 2.39ns
branch14:0  store i8 %tmp_6, i8* %msg_V_2_addr_9, align 1

ST_6: stg_143 [1/1] 0.00ns
branch14:1  br label %4

ST_6: stg_144 [1/1] 2.39ns
branch13:0  store i8 %tmp_6, i8* %msg_V_1_addr_9, align 1

ST_6: stg_145 [1/1] 0.00ns
branch13:1  br label %4

ST_6: stg_146 [1/1] 2.39ns
branch12:0  store i8 %tmp_6, i8* %msg_V_0_addr_9, align 1

ST_6: stg_147 [1/1] 0.00ns
branch12:1  br label %4

ST_6: stg_148 [1/1] 2.39ns
branch15:0  store i8 %tmp_6, i8* %msg_V_3_addr_9, align 1

ST_6: stg_149 [1/1] 0.00ns
branch15:1  br label %4

ST_6: tmp_16 [1/1] 4.22ns
:0  %tmp_16 = add i32 %t_V_5, 1

ST_6: stg_151 [1/1] 3.25ns
:1  store i32 %tmp_16, i32* @initial_length_V, align 4

ST_6: stg_152 [1/1] 2.66ns
:2  br label %._crit_edge1212

ST_6: initial_length_V_load1 [1/1] 0.00ns
._crit_edge1212:0  %initial_length_V_load1 = phi i32 [ %tmp_16, %4 ], [ %initial_length_V_load2, %._crit_edge1211 ]

ST_6: empty [1/1] 0.00ns
._crit_edge1212:1  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str22, i32 %tmp_2)

ST_6: stg_155 [1/1] 0.00ns
._crit_edge1212:2  br label %1


 <State 7>: 11.94ns
ST_7: stg_156 [1/1] 2.66ns
:0  store i32 1732584193, i32* @h0_V, align 4

ST_7: stg_157 [1/1] 2.66ns
:1  store i32 -271733879, i32* @h1_V, align 4

ST_7: stg_158 [1/1] 2.66ns
:2  store i32 -1732584194, i32* @h2_V, align 4

ST_7: stg_159 [1/1] 2.66ns
:3  store i32 271733878, i32* @h3_V, align 4

ST_7: tmp_1 [1/1] 4.22ns
:4  %tmp_1 = add i32 1, %initial_length_V_load

ST_7: tmp [1/1] 0.00ns
:5  %tmp = trunc i32 %tmp_1 to i6

ST_7: tmp_9 [1/1] 3.50ns
:6  %tmp_9 = sub i6 -8, %tmp

ST_7: tmp_3 [1/1] 0.00ns
:7  %tmp_3 = zext i6 %tmp_9 to i32

ST_7: op2 [1/1] 4.22ns
:8  %op2 = add i32 %tmp_3, %tmp_1

ST_7: stg_165 [1/1] 2.66ns
:9  br label %6


 <State 8>: 5.15ns
ST_8: storemerge_in [1/1] 0.00ns
:0  %storemerge_in = phi i32 [ %initial_length_V_load, %5 ], [ %t_V_1, %7 ]

ST_8: t_V_1 [1/1] 4.22ns
:1  %t_V_1 = add i32 1, %storemerge_in

ST_8: tmp_11 [1/1] 0.00ns
:2  %tmp_11 = trunc i32 %storemerge_in to i6

ST_8: exitcond2 [1/1] 3.15ns
:3  %exitcond2 = icmp eq i6 %tmp_11, -9

ST_8: stg_170 [1/1] 0.00ns
:4  br i1 %exitcond2, label %8, label %7

ST_8: stg_171 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str23) nounwind

ST_8: tmp_7 [1/1] 0.00ns
:1  %tmp_7 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str23)

ST_8: stg_173 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecLoopTripCount(i32 300, i32 300, i32 300, [1 x i8]* @p_str19) nounwind

ST_8: empty_13 [1/1] 0.00ns
:3  %empty_13 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str23, i32 %tmp_7)

ST_8: stg_175 [1/1] 0.00ns
:4  br label %6

ST_8: stg_176 [1/1] 0.00ns
:0  store i32 %op2, i32* @new_length_V, align 4

ST_8: tmp_19 [1/1] 0.00ns
:1  %tmp_19 = trunc i32 %initial_length_V_load to i2

ST_8: newIndex2 [1/1] 0.00ns
:2  %newIndex2 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %initial_length_V_load, i32 2, i32 31)

ST_8: newIndex3 [1/1] 0.00ns
:3  %newIndex3 = zext i30 %newIndex2 to i64

ST_8: msg_V_0_addr_1 [1/1] 0.00ns
:4  %msg_V_0_addr_1 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex3

ST_8: msg_V_1_addr_1 [1/1] 0.00ns
:5  %msg_V_1_addr_1 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex3

ST_8: msg_V_2_addr_1 [1/1] 0.00ns
:6  %msg_V_2_addr_1 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex3

ST_8: msg_V_3_addr_1 [1/1] 0.00ns
:7  %msg_V_3_addr_1 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex3

ST_8: stg_184 [1/1] 2.80ns
:8  switch i2 %tmp_19, label %branch19 [
    i2 0, label %branch16
    i2 1, label %branch17
    i2 -2, label %branch18
  ]

ST_8: stg_185 [1/1] 2.39ns
branch18:0  store i8 -128, i8* %msg_V_2_addr_1, align 1

ST_8: stg_186 [1/1] 0.00ns
branch18:1  br label %9

ST_8: stg_187 [1/1] 2.39ns
branch17:0  store i8 -128, i8* %msg_V_1_addr_1, align 1

ST_8: stg_188 [1/1] 0.00ns
branch17:1  br label %9

ST_8: stg_189 [1/1] 2.39ns
branch16:0  store i8 -128, i8* %msg_V_0_addr_1, align 1

ST_8: stg_190 [1/1] 0.00ns
branch16:1  br label %9

ST_8: stg_191 [1/1] 2.39ns
branch19:0  store i8 -128, i8* %msg_V_3_addr_1, align 1

ST_8: stg_192 [1/1] 0.00ns
branch19:1  br label %9

ST_8: stg_193 [1/1] 2.66ns
:0  br label %10


 <State 9>: 10.08ns
ST_9: storemerge1200_in [1/1] 0.00ns
:0  %storemerge1200_in = phi i32 [ %initial_length_V_load, %9 ], [ %t_V_2, %12 ]

ST_9: t_V_2 [1/1] 4.22ns
:1  %t_V_2 = add i32 %storemerge1200_in, 1

ST_9: tmp_8 [1/1] 3.86ns
:2  %tmp_8 = icmp ult i32 %t_V_2, %op2

ST_9: stg_197 [1/1] 0.00ns
:3  br i1 %tmp_8, label %11, label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48

ST_9: stg_198 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str24) nounwind

ST_9: tmp_5 [1/1] 0.00ns
:1  %tmp_5 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str24)

ST_9: stg_200 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecLoopTripCount(i32 448, i32 448, i32 448, [1 x i8]* @p_str19) nounwind

ST_9: tmp_24 [1/1] 0.00ns
:3  %tmp_24 = trunc i32 %storemerge1200_in to i2

ST_9: newIndex6 [1/1] 0.00ns
:4  %newIndex6 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %t_V_2, i32 2, i32 31)

ST_9: newIndex7 [1/1] 0.00ns
:5  %newIndex7 = zext i30 %newIndex6 to i64

ST_9: msg_V_1_addr_3 [1/1] 0.00ns
:6  %msg_V_1_addr_3 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex7

ST_9: msg_V_2_addr_3 [1/1] 0.00ns
:7  %msg_V_2_addr_3 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex7

ST_9: msg_V_3_addr_3 [1/1] 0.00ns
:8  %msg_V_3_addr_3 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex7

ST_9: msg_V_0_addr_3 [1/1] 0.00ns
:9  %msg_V_0_addr_3 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex7

ST_9: stg_208 [1/1] 2.80ns
:10  switch i2 %tmp_24, label %branch23 [
    i2 0, label %branch20
    i2 1, label %branch21
    i2 -2, label %branch22
  ]

ST_9: stg_209 [1/1] 2.39ns
branch22:0  store i8 0, i8* %msg_V_3_addr_3, align 1

ST_9: stg_210 [1/1] 0.00ns
branch22:1  br label %12

ST_9: stg_211 [1/1] 2.39ns
branch21:0  store i8 0, i8* %msg_V_2_addr_3, align 1

ST_9: stg_212 [1/1] 0.00ns
branch21:1  br label %12

ST_9: stg_213 [1/1] 2.39ns
branch20:0  store i8 0, i8* %msg_V_1_addr_3, align 1

ST_9: stg_214 [1/1] 0.00ns
branch20:1  br label %12

ST_9: stg_215 [1/1] 2.39ns
branch23:0  store i8 0, i8* %msg_V_0_addr_3, align 1

ST_9: stg_216 [1/1] 0.00ns
branch23:1  br label %12

ST_9: empty_14 [1/1] 0.00ns
:0  %empty_14 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str24, i32 %tmp_5)

ST_9: stg_218 [1/1] 0.00ns
:1  br label %10

ST_9: tmp_38 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48:0  %tmp_38 = trunc i32 %op2 to i10

ST_9: tmp_39 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48:1  %tmp_39 = trunc i32 %initial_length_V_load to i5

ST_9: p_043_0_i1 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48:2  %p_043_0_i1 = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %tmp_39, i3 0)

ST_9: tmp_40 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48:3  %tmp_40 = trunc i32 %op2 to i2

ST_9: newIndex8 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48:4  %newIndex8 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %op2, i32 2, i32 31)

ST_9: newIndex9 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48:5  %newIndex9 = zext i30 %newIndex8 to i64

ST_9: msg_V_0_addr_4 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48:6  %msg_V_0_addr_4 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex9

ST_9: msg_V_1_addr_4 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48:7  %msg_V_1_addr_4 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex9

ST_9: msg_V_2_addr_4 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48:8  %msg_V_2_addr_4 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex9

ST_9: msg_V_3_addr_4 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48:9  %msg_V_3_addr_4 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex9

ST_9: stg_229 [1/1] 2.80ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48:10  switch i2 %tmp_40, label %branch27 [
    i2 0, label %branch24
    i2 1, label %branch25
    i2 -2, label %branch26
  ]

ST_9: stg_230 [1/1] 2.39ns
branch26:0  store i8 %p_043_0_i1, i8* %msg_V_2_addr_4, align 1

ST_9: stg_231 [1/1] 0.00ns
branch26:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515

ST_9: stg_232 [1/1] 2.39ns
branch25:0  store i8 %p_043_0_i1, i8* %msg_V_1_addr_4, align 1

ST_9: stg_233 [1/1] 0.00ns
branch25:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515

ST_9: stg_234 [1/1] 2.39ns
branch24:0  store i8 %p_043_0_i1, i8* %msg_V_0_addr_4, align 1

ST_9: stg_235 [1/1] 0.00ns
branch24:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515

ST_9: stg_236 [1/1] 2.39ns
branch27:0  store i8 %p_043_0_i1, i8* %msg_V_3_addr_4, align 1

ST_9: stg_237 [1/1] 0.00ns
branch27:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515

ST_9: phitmp_i [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515:0  %phitmp_i = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %initial_length_V_load, i32 5, i32 12)

ST_9: p_sum1 [1/1] 3.62ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515:1  %p_sum1 = add i10 %tmp_38, 1

ST_9: newIndex10 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515:2  %newIndex10 = call i8 @_ssdm_op_PartSelect.i8.i10.i32.i32(i10 %p_sum1, i32 2, i32 9)

ST_9: newIndex10_cast [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515:3  %newIndex10_cast = zext i8 %newIndex10 to i64

ST_9: msg_V_1_addr_5 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515:4  %msg_V_1_addr_5 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex10_cast

ST_9: msg_V_2_addr_5 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515:5  %msg_V_2_addr_5 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex10_cast

ST_9: msg_V_3_addr_5 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515:6  %msg_V_3_addr_5 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex10_cast

ST_9: msg_V_0_addr_5 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515:7  %msg_V_0_addr_5 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex10_cast

ST_9: stg_246 [1/1] 2.80ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515:8  switch i2 %tmp_40, label %branch31 [
    i2 0, label %branch28
    i2 1, label %branch29
    i2 -2, label %branch30
  ]

ST_9: stg_247 [1/1] 2.39ns
branch30:0  store i8 %phitmp_i, i8* %msg_V_3_addr_5, align 1

ST_9: stg_248 [1/1] 0.00ns
branch30:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522

ST_9: stg_249 [1/1] 2.39ns
branch29:0  store i8 %phitmp_i, i8* %msg_V_2_addr_5, align 1

ST_9: stg_250 [1/1] 0.00ns
branch29:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522

ST_9: stg_251 [1/1] 2.39ns
branch28:0  store i8 %phitmp_i, i8* %msg_V_1_addr_5, align 1

ST_9: stg_252 [1/1] 0.00ns
branch28:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522

ST_9: stg_253 [1/1] 2.39ns
branch31:0  store i8 %phitmp_i, i8* %msg_V_0_addr_5, align 1

ST_9: stg_254 [1/1] 0.00ns
branch31:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522

ST_9: phitmp59_i [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522:0  %phitmp59_i = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %initial_length_V_load, i32 13, i32 20)

ST_9: p_sum2 [1/1] 3.62ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522:1  %p_sum2 = add i10 %tmp_38, 2

ST_9: newIndex13 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522:2  %newIndex13 = call i8 @_ssdm_op_PartSelect.i8.i10.i32.i32(i10 %p_sum2, i32 2, i32 9)

ST_9: newIndex13_cast [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522:3  %newIndex13_cast = zext i8 %newIndex13 to i64

ST_9: msg_V_2_addr_7 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522:4  %msg_V_2_addr_7 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex13_cast

ST_9: msg_V_3_addr_7 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522:5  %msg_V_3_addr_7 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex13_cast

ST_9: msg_V_0_addr_7 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522:6  %msg_V_0_addr_7 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex13_cast

ST_9: msg_V_1_addr_7 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522:7  %msg_V_1_addr_7 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex13_cast

ST_9: stg_263 [1/1] 2.80ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522:8  switch i2 %tmp_40, label %branch35 [
    i2 0, label %branch32
    i2 1, label %branch33
    i2 -2, label %branch34
  ]


 <State 10>: 6.01ns
ST_10: stg_264 [1/1] 2.39ns
branch34:0  store i8 %phitmp59_i, i8* %msg_V_0_addr_7, align 1

ST_10: stg_265 [1/1] 0.00ns
branch34:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529

ST_10: stg_266 [1/1] 2.39ns
branch33:0  store i8 %phitmp59_i, i8* %msg_V_3_addr_7, align 1

ST_10: stg_267 [1/1] 0.00ns
branch33:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529

ST_10: stg_268 [1/1] 2.39ns
branch32:0  store i8 %phitmp59_i, i8* %msg_V_2_addr_7, align 1

ST_10: stg_269 [1/1] 0.00ns
branch32:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529

ST_10: stg_270 [1/1] 2.39ns
branch35:0  store i8 %phitmp59_i, i8* %msg_V_1_addr_7, align 1

ST_10: stg_271 [1/1] 0.00ns
branch35:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529

ST_10: phitmp60_i [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529:0  %phitmp60_i = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %initial_length_V_load, i32 21, i32 28)

ST_10: p_sum3 [1/1] 3.62ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529:1  %p_sum3 = add i10 %tmp_38, 3

ST_10: newIndex14 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529:2  %newIndex14 = call i8 @_ssdm_op_PartSelect.i8.i10.i32.i32(i10 %p_sum3, i32 2, i32 9)

ST_10: newIndex14_cast [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529:3  %newIndex14_cast = zext i8 %newIndex14 to i64

ST_10: msg_V_3_addr_8 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529:4  %msg_V_3_addr_8 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex14_cast

ST_10: msg_V_0_addr_8 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529:5  %msg_V_0_addr_8 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex14_cast

ST_10: msg_V_1_addr_8 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529:6  %msg_V_1_addr_8 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex14_cast

ST_10: msg_V_2_addr_8 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529:7  %msg_V_2_addr_8 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex14_cast

ST_10: stg_280 [1/1] 2.80ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529:8  switch i2 %tmp_40, label %branch39 [
    i2 0, label %branch36
    i2 1, label %branch37
    i2 -2, label %branch38
  ]

ST_10: stg_281 [1/1] 2.39ns
branch38:0  store i8 %phitmp60_i, i8* %msg_V_1_addr_8, align 1

ST_10: stg_282 [1/1] 0.00ns
branch38:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536

ST_10: stg_283 [1/1] 2.39ns
branch37:0  store i8 %phitmp60_i, i8* %msg_V_0_addr_8, align 1

ST_10: stg_284 [1/1] 0.00ns
branch37:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536

ST_10: stg_285 [1/1] 2.39ns
branch36:0  store i8 %phitmp60_i, i8* %msg_V_3_addr_8, align 1

ST_10: stg_286 [1/1] 0.00ns
branch36:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536

ST_10: stg_287 [1/1] 2.39ns
branch39:0  store i8 %phitmp60_i, i8* %msg_V_2_addr_8, align 1

ST_10: stg_288 [1/1] 0.00ns
branch39:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536

ST_10: p_sum [1/1] 3.62ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536:0  %p_sum = add i10 %tmp_38, 4

ST_10: tmp_15 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536:1  %tmp_15 = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %initial_length_V_load, i32 29, i32 31)

ST_10: p_043_0_i [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536:2  %p_043_0_i = zext i3 %tmp_15 to i8

ST_10: newIndex17 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536:3  %newIndex17 = call i8 @_ssdm_op_PartSelect.i8.i10.i32.i32(i10 %p_sum, i32 2, i32 9)

ST_10: newIndex17_cast [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536:4  %newIndex17_cast = zext i8 %newIndex17 to i64

ST_10: msg_V_0_addr_10 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536:5  %msg_V_0_addr_10 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex17_cast

ST_10: msg_V_1_addr_10 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536:6  %msg_V_1_addr_10 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex17_cast

ST_10: msg_V_2_addr_10 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536:7  %msg_V_2_addr_10 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex17_cast

ST_10: msg_V_3_addr_10 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536:8  %msg_V_3_addr_10 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex17_cast

ST_10: stg_298 [1/1] 2.80ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536:9  switch i2 %tmp_40, label %branch43 [
    i2 0, label %branch40
    i2 1, label %branch41
    i2 -2, label %branch42
  ]


 <State 11>: 6.01ns
ST_11: stg_299 [1/1] 2.39ns
branch42:0  store i8 %p_043_0_i, i8* %msg_V_2_addr_10, align 1

ST_11: stg_300 [1/1] 0.00ns
branch42:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543

ST_11: stg_301 [1/1] 2.39ns
branch41:0  store i8 %p_043_0_i, i8* %msg_V_1_addr_10, align 1

ST_11: stg_302 [1/1] 0.00ns
branch41:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543

ST_11: stg_303 [1/1] 2.39ns
branch40:0  store i8 %p_043_0_i, i8* %msg_V_0_addr_10, align 1

ST_11: stg_304 [1/1] 0.00ns
branch40:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543

ST_11: stg_305 [1/1] 2.39ns
branch43:0  store i8 %p_043_0_i, i8* %msg_V_3_addr_10, align 1

ST_11: stg_306 [1/1] 0.00ns
branch43:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543

ST_11: p_sum4 [1/1] 3.62ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543:0  %p_sum4 = add i10 %tmp_38, 5

ST_11: newIndex18 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543:1  %newIndex18 = call i8 @_ssdm_op_PartSelect.i8.i10.i32.i32(i10 %p_sum4, i32 2, i32 9)

ST_11: newIndex18_cast [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543:2  %newIndex18_cast = zext i8 %newIndex18 to i64

ST_11: msg_V_1_addr_11 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543:3  %msg_V_1_addr_11 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex18_cast

ST_11: msg_V_2_addr_11 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543:4  %msg_V_2_addr_11 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex18_cast

ST_11: msg_V_3_addr_11 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543:5  %msg_V_3_addr_11 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex18_cast

ST_11: msg_V_0_addr_11 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543:6  %msg_V_0_addr_11 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex18_cast

ST_11: stg_314 [1/1] 2.80ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543:7  switch i2 %tmp_40, label %branch47 [
    i2 0, label %branch44
    i2 1, label %branch45
    i2 -2, label %branch46
  ]

ST_11: stg_315 [1/1] 2.39ns
branch46:0  store i8 0, i8* %msg_V_3_addr_11, align 1

ST_11: stg_316 [1/1] 0.00ns
branch46:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550

ST_11: stg_317 [1/1] 2.39ns
branch45:0  store i8 0, i8* %msg_V_2_addr_11, align 1

ST_11: stg_318 [1/1] 0.00ns
branch45:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550

ST_11: stg_319 [1/1] 2.39ns
branch44:0  store i8 0, i8* %msg_V_1_addr_11, align 1

ST_11: stg_320 [1/1] 0.00ns
branch44:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550

ST_11: stg_321 [1/1] 2.39ns
branch47:0  store i8 0, i8* %msg_V_0_addr_11, align 1

ST_11: stg_322 [1/1] 0.00ns
branch47:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550

ST_11: p_sum5 [1/1] 3.62ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550:0  %p_sum5 = add i10 %tmp_38, 6

ST_11: newIndex19 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550:1  %newIndex19 = call i8 @_ssdm_op_PartSelect.i8.i10.i32.i32(i10 %p_sum5, i32 2, i32 9)

ST_11: newIndex19_cast [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550:2  %newIndex19_cast = zext i8 %newIndex19 to i64

ST_11: msg_V_2_addr_12 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550:3  %msg_V_2_addr_12 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex19_cast

ST_11: msg_V_3_addr_12 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550:4  %msg_V_3_addr_12 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex19_cast

ST_11: msg_V_0_addr_12 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550:5  %msg_V_0_addr_12 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex19_cast

ST_11: msg_V_1_addr_12 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550:6  %msg_V_1_addr_12 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex19_cast

ST_11: stg_330 [1/1] 2.80ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550:7  switch i2 %tmp_40, label %branch51 [
    i2 0, label %branch48
    i2 1, label %branch49
    i2 -2, label %branch50
  ]


 <State 12>: 6.01ns
ST_12: stg_331 [1/1] 2.39ns
branch50:0  store i8 0, i8* %msg_V_0_addr_12, align 1

ST_12: stg_332 [1/1] 0.00ns
branch50:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550557

ST_12: stg_333 [1/1] 2.39ns
branch49:0  store i8 0, i8* %msg_V_3_addr_12, align 1

ST_12: stg_334 [1/1] 0.00ns
branch49:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550557

ST_12: stg_335 [1/1] 2.39ns
branch48:0  store i8 0, i8* %msg_V_2_addr_12, align 1

ST_12: stg_336 [1/1] 0.00ns
branch48:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550557

ST_12: stg_337 [1/1] 2.39ns
branch51:0  store i8 0, i8* %msg_V_1_addr_12, align 1

ST_12: stg_338 [1/1] 0.00ns
branch51:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550557

ST_12: p_sum6 [1/1] 3.62ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550557:0  %p_sum6 = add i10 %tmp_38, 7

ST_12: newIndex20 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550557:1  %newIndex20 = call i8 @_ssdm_op_PartSelect.i8.i10.i32.i32(i10 %p_sum6, i32 2, i32 9)

ST_12: newIndex20_cast [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550557:2  %newIndex20_cast = zext i8 %newIndex20 to i64

ST_12: msg_V_3_addr_13 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550557:3  %msg_V_3_addr_13 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex20_cast

ST_12: msg_V_0_addr_13 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550557:4  %msg_V_0_addr_13 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex20_cast

ST_12: msg_V_1_addr_13 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550557:5  %msg_V_1_addr_13 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex20_cast

ST_12: msg_V_2_addr_13 [1/1] 0.00ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550557:6  %msg_V_2_addr_13 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex20_cast

ST_12: stg_346 [1/1] 2.80ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550557:7  switch i2 %tmp_40, label %branch55 [
    i2 0, label %branch52
    i2 1, label %branch53
    i2 -2, label %branch54
  ]

ST_12: stg_347 [1/1] 2.39ns
branch54:0  store i8 0, i8* %msg_V_1_addr_13, align 1

ST_12: stg_348 [1/1] 0.00ns
branch54:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550557564

ST_12: stg_349 [1/1] 2.39ns
branch53:0  store i8 0, i8* %msg_V_0_addr_13, align 1

ST_12: stg_350 [1/1] 0.00ns
branch53:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550557564

ST_12: stg_351 [1/1] 2.39ns
branch52:0  store i8 0, i8* %msg_V_3_addr_13, align 1

ST_12: stg_352 [1/1] 0.00ns
branch52:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550557564

ST_12: stg_353 [1/1] 2.39ns
branch55:0  store i8 0, i8* %msg_V_2_addr_13, align 1

ST_12: stg_354 [1/1] 0.00ns
branch55:1  br label %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550557564

ST_12: stg_355 [1/1] 2.66ns
_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550557564:0  br label %13


 <State 13>: 5.86ns
ST_13: lhs_V_4 [1/1] 0.00ns
:0  %lhs_V_4 = phi i32 [ 271733878, %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550557564 ], [ %tmp_36, %40 ]

ST_13: lhs_V_3 [1/1] 0.00ns
:1  %lhs_V_3 = phi i32 [ -1732584194, %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550557564 ], [ %tmp_35, %40 ]

ST_13: lhs_V_2 [1/1] 0.00ns
:2  %lhs_V_2 = phi i32 [ -271733879, %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550557564 ], [ %tmp_34, %40 ]

ST_13: lhs_V_1 [1/1] 0.00ns
:3  %lhs_V_1 = phi i32 [ 1732584193, %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550557564 ], [ %tmp_33, %40 ]

ST_13: offset_V_load [1/1] 0.00ns
:4  %offset_V_load = phi i32 [ 0, %_ZrsILi32ELb0EE11ap_int_baseIXT_EXT0_EXleT_Li64EEERKS1_i.exit48515522529536543550557564 ], [ %tmp_37, %40 ]

ST_13: tmp_17 [1/1] 3.86ns
:5  %tmp_17 = icmp ult i32 %offset_V_load, %op2

ST_13: stg_362 [1/1] 0.00ns
:6  br i1 %tmp_17, label %14, label %41

ST_13: newIndex21 [1/1] 0.00ns
:3  %newIndex21 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %offset_V_load, i32 2, i32 31)

ST_13: newIndex22 [1/1] 0.00ns
:4  %newIndex22 = zext i30 %newIndex21 to i64

ST_13: msg_V_0_addr_14 [1/1] 0.00ns
:5  %msg_V_0_addr_14 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex22

ST_13: msg_V_0_load [2/2] 2.39ns
:6  %msg_V_0_load = load i8* %msg_V_0_addr_14, align 16

ST_13: newIndex23 [1/1] 0.00ns
:7  %newIndex23 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %offset_V_load, i32 2, i32 9)

ST_13: newIndex23_cast [1/1] 0.00ns
:8  %newIndex23_cast = zext i8 %newIndex23 to i64

ST_13: msg_V_1_addr_14 [1/1] 0.00ns
:9  %msg_V_1_addr_14 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex23_cast

ST_13: msg_V_1_load [2/2] 2.39ns
:10  %msg_V_1_load = load i8* %msg_V_1_addr_14, align 16

ST_13: msg_V_2_addr_14 [1/1] 0.00ns
:11  %msg_V_2_addr_14 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex23_cast

ST_13: msg_V_2_load [2/2] 2.39ns
:12  %msg_V_2_load = load i8* %msg_V_2_addr_14, align 16

ST_13: msg_V_3_addr_14 [1/1] 0.00ns
:13  %msg_V_3_addr_14 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex23_cast

ST_13: msg_V_3_load [2/2] 2.39ns
:14  %msg_V_3_load = load i8* %msg_V_3_addr_14, align 16

ST_13: newIndex24 [1/1] 0.00ns
:17  %newIndex24 = or i8 %newIndex23, 1

ST_13: newIndex24_cast [1/1] 0.00ns
:18  %newIndex24_cast = zext i8 %newIndex24 to i64

ST_13: msg_V_0_addr_15 [1/1] 0.00ns
:19  %msg_V_0_addr_15 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex24_cast

ST_13: msg_V_0_load_1 [2/2] 2.39ns
:20  %msg_V_0_load_1 = load i8* %msg_V_0_addr_15, align 1

ST_13: msg_V_1_addr_15 [1/1] 0.00ns
:21  %msg_V_1_addr_15 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex24_cast

ST_13: msg_V_1_load_1 [2/2] 2.39ns
:22  %msg_V_1_load_1 = load i8* %msg_V_1_addr_15, align 1

ST_13: msg_V_2_addr_15 [1/1] 0.00ns
:23  %msg_V_2_addr_15 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex24_cast

ST_13: msg_V_2_load_1 [2/2] 2.39ns
:24  %msg_V_2_load_1 = load i8* %msg_V_2_addr_15, align 1

ST_13: msg_V_3_addr_15 [1/1] 0.00ns
:25  %msg_V_3_addr_15 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex24_cast

ST_13: msg_V_3_load_1 [2/2] 2.39ns
:26  %msg_V_3_load_1 = load i8* %msg_V_3_addr_15, align 1

ST_13: stg_385 [1/1] 0.00ns
:0  store i32 %offset_V_load, i32* @offset_V, align 4

ST_13: tmp_44 [1/1] 0.00ns
:1  %tmp_44 = trunc i32 %lhs_V_1 to i8

ST_13: p_3 [1/1] 0.00ns
:2  %p_3 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %lhs_V_1, i32 24, i32 31)

ST_13: p_1 [1/1] 0.00ns
:3  %p_1 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %lhs_V_1, i32 8, i32 15)

ST_13: p_2 [1/1] 0.00ns
:4  %p_2 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %lhs_V_1, i32 16, i32 23)

ST_13: tmp_V [1/1] 0.00ns
:5  %tmp_V = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %tmp_44, i8 %p_1, i8 %p_2, i8 %p_3)

ST_13: stg_391 [1/1] 0.00ns
:6  call void @_ssdm_op_Write.ap_fifo.volatile.i32P(i32* %output_V_V, i32 %tmp_V)


 <State 14>: 4.78ns
ST_14: msg_V_0_load [1/2] 2.39ns
:6  %msg_V_0_load = load i8* %msg_V_0_addr_14, align 16

ST_14: msg_V_1_load [1/2] 2.39ns
:10  %msg_V_1_load = load i8* %msg_V_1_addr_14, align 16

ST_14: msg_V_2_load [1/2] 2.39ns
:12  %msg_V_2_load = load i8* %msg_V_2_addr_14, align 16

ST_14: msg_V_3_load [1/2] 2.39ns
:14  %msg_V_3_load = load i8* %msg_V_3_addr_14, align 16

ST_14: r_V_6 [1/1] 0.00ns
:15  %r_V_6 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %msg_V_3_load, i8 %msg_V_2_load, i8 %msg_V_1_load, i8 %msg_V_0_load)

ST_14: stg_397 [1/1] 2.39ns
:16  store i32 %r_V_6, i32* getelementptr inbounds ([16 x i32]* @w_V, i64 0, i64 0), align 16

ST_14: msg_V_0_load_1 [1/2] 2.39ns
:20  %msg_V_0_load_1 = load i8* %msg_V_0_addr_15, align 1

ST_14: msg_V_1_load_1 [1/2] 2.39ns
:22  %msg_V_1_load_1 = load i8* %msg_V_1_addr_15, align 1

ST_14: msg_V_2_load_1 [1/2] 2.39ns
:24  %msg_V_2_load_1 = load i8* %msg_V_2_addr_15, align 1

ST_14: msg_V_3_load_1 [1/2] 2.39ns
:26  %msg_V_3_load_1 = load i8* %msg_V_3_addr_15, align 1

ST_14: r_V_6_1 [1/1] 0.00ns
:27  %r_V_6_1 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %msg_V_3_load_1, i8 %msg_V_2_load_1, i8 %msg_V_1_load_1, i8 %msg_V_0_load_1)

ST_14: stg_403 [1/1] 2.39ns
:28  store i32 %r_V_6_1, i32* getelementptr inbounds ([16 x i32]* @w_V, i64 0, i64 1), align 4

ST_14: newIndex25 [1/1] 0.00ns
:29  %newIndex25 = or i8 %newIndex23, 2

ST_14: newIndex25_cast [1/1] 0.00ns
:30  %newIndex25_cast = zext i8 %newIndex25 to i64

ST_14: msg_V_0_addr_16 [1/1] 0.00ns
:31  %msg_V_0_addr_16 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex25_cast

ST_14: msg_V_0_load_2 [2/2] 2.39ns
:32  %msg_V_0_load_2 = load i8* %msg_V_0_addr_16, align 2

ST_14: msg_V_1_addr_16 [1/1] 0.00ns
:33  %msg_V_1_addr_16 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex25_cast

ST_14: msg_V_1_load_2 [2/2] 2.39ns
:34  %msg_V_1_load_2 = load i8* %msg_V_1_addr_16, align 2

ST_14: msg_V_2_addr_16 [1/1] 0.00ns
:35  %msg_V_2_addr_16 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex25_cast

ST_14: msg_V_2_load_2 [2/2] 2.39ns
:36  %msg_V_2_load_2 = load i8* %msg_V_2_addr_16, align 2

ST_14: msg_V_3_addr_16 [1/1] 0.00ns
:37  %msg_V_3_addr_16 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex25_cast

ST_14: msg_V_3_load_2 [2/2] 2.39ns
:38  %msg_V_3_load_2 = load i8* %msg_V_3_addr_16, align 2

ST_14: newIndex26 [1/1] 0.00ns
:41  %newIndex26 = or i8 %newIndex23, 3

ST_14: newIndex26_cast [1/1] 0.00ns
:42  %newIndex26_cast = zext i8 %newIndex26 to i64

ST_14: msg_V_0_addr_17 [1/1] 0.00ns
:43  %msg_V_0_addr_17 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex26_cast

ST_14: msg_V_0_load_3 [2/2] 2.39ns
:44  %msg_V_0_load_3 = load i8* %msg_V_0_addr_17, align 1

ST_14: msg_V_1_addr_17 [1/1] 0.00ns
:45  %msg_V_1_addr_17 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex26_cast

ST_14: msg_V_1_load_3 [2/2] 2.39ns
:46  %msg_V_1_load_3 = load i8* %msg_V_1_addr_17, align 1

ST_14: msg_V_2_addr_17 [1/1] 0.00ns
:47  %msg_V_2_addr_17 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex26_cast

ST_14: msg_V_2_load_3 [2/2] 2.39ns
:48  %msg_V_2_load_3 = load i8* %msg_V_2_addr_17, align 1

ST_14: msg_V_3_addr_17 [1/1] 0.00ns
:49  %msg_V_3_addr_17 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex26_cast

ST_14: msg_V_3_load_3 [2/2] 2.39ns
:50  %msg_V_3_load_3 = load i8* %msg_V_3_addr_17, align 1


 <State 15>: 4.78ns
ST_15: msg_V_0_load_2 [1/2] 2.39ns
:32  %msg_V_0_load_2 = load i8* %msg_V_0_addr_16, align 2

ST_15: msg_V_1_load_2 [1/2] 2.39ns
:34  %msg_V_1_load_2 = load i8* %msg_V_1_addr_16, align 2

ST_15: msg_V_2_load_2 [1/2] 2.39ns
:36  %msg_V_2_load_2 = load i8* %msg_V_2_addr_16, align 2

ST_15: msg_V_3_load_2 [1/2] 2.39ns
:38  %msg_V_3_load_2 = load i8* %msg_V_3_addr_16, align 2

ST_15: r_V_6_2 [1/1] 0.00ns
:39  %r_V_6_2 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %msg_V_3_load_2, i8 %msg_V_2_load_2, i8 %msg_V_1_load_2, i8 %msg_V_0_load_2)

ST_15: stg_429 [1/1] 2.39ns
:40  store i32 %r_V_6_2, i32* getelementptr inbounds ([16 x i32]* @w_V, i64 0, i64 2), align 8

ST_15: msg_V_0_load_3 [1/2] 2.39ns
:44  %msg_V_0_load_3 = load i8* %msg_V_0_addr_17, align 1

ST_15: msg_V_1_load_3 [1/2] 2.39ns
:46  %msg_V_1_load_3 = load i8* %msg_V_1_addr_17, align 1

ST_15: msg_V_2_load_3 [1/2] 2.39ns
:48  %msg_V_2_load_3 = load i8* %msg_V_2_addr_17, align 1

ST_15: msg_V_3_load_3 [1/2] 2.39ns
:50  %msg_V_3_load_3 = load i8* %msg_V_3_addr_17, align 1

ST_15: r_V_6_3 [1/1] 0.00ns
:51  %r_V_6_3 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %msg_V_3_load_3, i8 %msg_V_2_load_3, i8 %msg_V_1_load_3, i8 %msg_V_0_load_3)

ST_15: stg_435 [1/1] 2.39ns
:52  store i32 %r_V_6_3, i32* getelementptr inbounds ([16 x i32]* @w_V, i64 0, i64 3), align 4

ST_15: newIndex27 [1/1] 0.00ns
:53  %newIndex27 = or i8 %newIndex23, 4

ST_15: newIndex27_cast [1/1] 0.00ns
:54  %newIndex27_cast = zext i8 %newIndex27 to i64

ST_15: msg_V_0_addr_18 [1/1] 0.00ns
:55  %msg_V_0_addr_18 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex27_cast

ST_15: msg_V_0_load_4 [2/2] 2.39ns
:56  %msg_V_0_load_4 = load i8* %msg_V_0_addr_18, align 4

ST_15: msg_V_1_addr_18 [1/1] 0.00ns
:57  %msg_V_1_addr_18 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex27_cast

ST_15: msg_V_1_load_4 [2/2] 2.39ns
:58  %msg_V_1_load_4 = load i8* %msg_V_1_addr_18, align 4

ST_15: msg_V_2_addr_18 [1/1] 0.00ns
:59  %msg_V_2_addr_18 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex27_cast

ST_15: msg_V_2_load_4 [2/2] 2.39ns
:60  %msg_V_2_load_4 = load i8* %msg_V_2_addr_18, align 4

ST_15: msg_V_3_addr_18 [1/1] 0.00ns
:61  %msg_V_3_addr_18 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex27_cast

ST_15: msg_V_3_load_4 [2/2] 2.39ns
:62  %msg_V_3_load_4 = load i8* %msg_V_3_addr_18, align 4

ST_15: newIndex28 [1/1] 0.00ns
:65  %newIndex28 = or i8 %newIndex23, 5

ST_15: newIndex28_cast [1/1] 0.00ns
:66  %newIndex28_cast = zext i8 %newIndex28 to i64

ST_15: msg_V_0_addr_19 [1/1] 0.00ns
:67  %msg_V_0_addr_19 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex28_cast

ST_15: msg_V_0_load_5 [2/2] 2.39ns
:68  %msg_V_0_load_5 = load i8* %msg_V_0_addr_19, align 1

ST_15: msg_V_1_addr_19 [1/1] 0.00ns
:69  %msg_V_1_addr_19 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex28_cast

ST_15: msg_V_1_load_5 [2/2] 2.39ns
:70  %msg_V_1_load_5 = load i8* %msg_V_1_addr_19, align 1

ST_15: msg_V_2_addr_19 [1/1] 0.00ns
:71  %msg_V_2_addr_19 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex28_cast

ST_15: msg_V_2_load_5 [2/2] 2.39ns
:72  %msg_V_2_load_5 = load i8* %msg_V_2_addr_19, align 1

ST_15: msg_V_3_addr_19 [1/1] 0.00ns
:73  %msg_V_3_addr_19 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex28_cast

ST_15: msg_V_3_load_5 [2/2] 2.39ns
:74  %msg_V_3_load_5 = load i8* %msg_V_3_addr_19, align 1


 <State 16>: 4.78ns
ST_16: msg_V_0_load_4 [1/2] 2.39ns
:56  %msg_V_0_load_4 = load i8* %msg_V_0_addr_18, align 4

ST_16: msg_V_1_load_4 [1/2] 2.39ns
:58  %msg_V_1_load_4 = load i8* %msg_V_1_addr_18, align 4

ST_16: msg_V_2_load_4 [1/2] 2.39ns
:60  %msg_V_2_load_4 = load i8* %msg_V_2_addr_18, align 4

ST_16: msg_V_3_load_4 [1/2] 2.39ns
:62  %msg_V_3_load_4 = load i8* %msg_V_3_addr_18, align 4

ST_16: r_V_6_4 [1/1] 0.00ns
:63  %r_V_6_4 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %msg_V_3_load_4, i8 %msg_V_2_load_4, i8 %msg_V_1_load_4, i8 %msg_V_0_load_4)

ST_16: stg_461 [1/1] 2.39ns
:64  store i32 %r_V_6_4, i32* getelementptr inbounds ([16 x i32]* @w_V, i64 0, i64 4), align 16

ST_16: msg_V_0_load_5 [1/2] 2.39ns
:68  %msg_V_0_load_5 = load i8* %msg_V_0_addr_19, align 1

ST_16: msg_V_1_load_5 [1/2] 2.39ns
:70  %msg_V_1_load_5 = load i8* %msg_V_1_addr_19, align 1

ST_16: msg_V_2_load_5 [1/2] 2.39ns
:72  %msg_V_2_load_5 = load i8* %msg_V_2_addr_19, align 1

ST_16: msg_V_3_load_5 [1/2] 2.39ns
:74  %msg_V_3_load_5 = load i8* %msg_V_3_addr_19, align 1

ST_16: r_V_6_5 [1/1] 0.00ns
:75  %r_V_6_5 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %msg_V_3_load_5, i8 %msg_V_2_load_5, i8 %msg_V_1_load_5, i8 %msg_V_0_load_5)

ST_16: stg_467 [1/1] 2.39ns
:76  store i32 %r_V_6_5, i32* getelementptr inbounds ([16 x i32]* @w_V, i64 0, i64 5), align 4

ST_16: newIndex29 [1/1] 0.00ns
:77  %newIndex29 = or i8 %newIndex23, 6

ST_16: newIndex29_cast [1/1] 0.00ns
:78  %newIndex29_cast = zext i8 %newIndex29 to i64

ST_16: msg_V_0_addr_20 [1/1] 0.00ns
:79  %msg_V_0_addr_20 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex29_cast

ST_16: msg_V_0_load_6 [2/2] 2.39ns
:80  %msg_V_0_load_6 = load i8* %msg_V_0_addr_20, align 2

ST_16: msg_V_1_addr_20 [1/1] 0.00ns
:81  %msg_V_1_addr_20 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex29_cast

ST_16: msg_V_1_load_6 [2/2] 2.39ns
:82  %msg_V_1_load_6 = load i8* %msg_V_1_addr_20, align 2

ST_16: msg_V_2_addr_20 [1/1] 0.00ns
:83  %msg_V_2_addr_20 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex29_cast

ST_16: msg_V_2_load_6 [2/2] 2.39ns
:84  %msg_V_2_load_6 = load i8* %msg_V_2_addr_20, align 2

ST_16: msg_V_3_addr_20 [1/1] 0.00ns
:85  %msg_V_3_addr_20 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex29_cast

ST_16: msg_V_3_load_6 [2/2] 2.39ns
:86  %msg_V_3_load_6 = load i8* %msg_V_3_addr_20, align 2

ST_16: newIndex30 [1/1] 0.00ns
:89  %newIndex30 = or i8 %newIndex23, 7

ST_16: newIndex30_cast [1/1] 0.00ns
:90  %newIndex30_cast = zext i8 %newIndex30 to i64

ST_16: msg_V_0_addr_21 [1/1] 0.00ns
:91  %msg_V_0_addr_21 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex30_cast

ST_16: msg_V_0_load_7 [2/2] 2.39ns
:92  %msg_V_0_load_7 = load i8* %msg_V_0_addr_21, align 1

ST_16: msg_V_1_addr_21 [1/1] 0.00ns
:93  %msg_V_1_addr_21 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex30_cast

ST_16: msg_V_1_load_7 [2/2] 2.39ns
:94  %msg_V_1_load_7 = load i8* %msg_V_1_addr_21, align 1

ST_16: msg_V_2_addr_21 [1/1] 0.00ns
:95  %msg_V_2_addr_21 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex30_cast

ST_16: msg_V_2_load_7 [2/2] 2.39ns
:96  %msg_V_2_load_7 = load i8* %msg_V_2_addr_21, align 1

ST_16: msg_V_3_addr_21 [1/1] 0.00ns
:97  %msg_V_3_addr_21 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex30_cast

ST_16: msg_V_3_load_7 [2/2] 2.39ns
:98  %msg_V_3_load_7 = load i8* %msg_V_3_addr_21, align 1


 <State 17>: 4.78ns
ST_17: msg_V_0_load_6 [1/2] 2.39ns
:80  %msg_V_0_load_6 = load i8* %msg_V_0_addr_20, align 2

ST_17: msg_V_1_load_6 [1/2] 2.39ns
:82  %msg_V_1_load_6 = load i8* %msg_V_1_addr_20, align 2

ST_17: msg_V_2_load_6 [1/2] 2.39ns
:84  %msg_V_2_load_6 = load i8* %msg_V_2_addr_20, align 2

ST_17: msg_V_3_load_6 [1/2] 2.39ns
:86  %msg_V_3_load_6 = load i8* %msg_V_3_addr_20, align 2

ST_17: r_V_6_6 [1/1] 0.00ns
:87  %r_V_6_6 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %msg_V_3_load_6, i8 %msg_V_2_load_6, i8 %msg_V_1_load_6, i8 %msg_V_0_load_6)

ST_17: stg_493 [1/1] 2.39ns
:88  store i32 %r_V_6_6, i32* getelementptr inbounds ([16 x i32]* @w_V, i64 0, i64 6), align 8

ST_17: msg_V_0_load_7 [1/2] 2.39ns
:92  %msg_V_0_load_7 = load i8* %msg_V_0_addr_21, align 1

ST_17: msg_V_1_load_7 [1/2] 2.39ns
:94  %msg_V_1_load_7 = load i8* %msg_V_1_addr_21, align 1

ST_17: msg_V_2_load_7 [1/2] 2.39ns
:96  %msg_V_2_load_7 = load i8* %msg_V_2_addr_21, align 1

ST_17: msg_V_3_load_7 [1/2] 2.39ns
:98  %msg_V_3_load_7 = load i8* %msg_V_3_addr_21, align 1

ST_17: r_V_6_7 [1/1] 0.00ns
:99  %r_V_6_7 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %msg_V_3_load_7, i8 %msg_V_2_load_7, i8 %msg_V_1_load_7, i8 %msg_V_0_load_7)

ST_17: stg_499 [1/1] 2.39ns
:100  store i32 %r_V_6_7, i32* getelementptr inbounds ([16 x i32]* @w_V, i64 0, i64 7), align 4

ST_17: newIndex31 [1/1] 0.00ns
:101  %newIndex31 = or i8 %newIndex23, 8

ST_17: newIndex31_cast [1/1] 0.00ns
:102  %newIndex31_cast = zext i8 %newIndex31 to i64

ST_17: msg_V_0_addr_22 [1/1] 0.00ns
:103  %msg_V_0_addr_22 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex31_cast

ST_17: msg_V_0_load_8 [2/2] 2.39ns
:104  %msg_V_0_load_8 = load i8* %msg_V_0_addr_22, align 8

ST_17: msg_V_1_addr_22 [1/1] 0.00ns
:105  %msg_V_1_addr_22 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex31_cast

ST_17: msg_V_1_load_8 [2/2] 2.39ns
:106  %msg_V_1_load_8 = load i8* %msg_V_1_addr_22, align 8

ST_17: msg_V_2_addr_22 [1/1] 0.00ns
:107  %msg_V_2_addr_22 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex31_cast

ST_17: msg_V_2_load_8 [2/2] 2.39ns
:108  %msg_V_2_load_8 = load i8* %msg_V_2_addr_22, align 8

ST_17: msg_V_3_addr_22 [1/1] 0.00ns
:109  %msg_V_3_addr_22 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex31_cast

ST_17: msg_V_3_load_8 [2/2] 2.39ns
:110  %msg_V_3_load_8 = load i8* %msg_V_3_addr_22, align 8

ST_17: newIndex32 [1/1] 0.00ns
:113  %newIndex32 = or i8 %newIndex23, 9

ST_17: newIndex32_cast [1/1] 0.00ns
:114  %newIndex32_cast = zext i8 %newIndex32 to i64

ST_17: msg_V_0_addr_23 [1/1] 0.00ns
:115  %msg_V_0_addr_23 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex32_cast

ST_17: msg_V_0_load_9 [2/2] 2.39ns
:116  %msg_V_0_load_9 = load i8* %msg_V_0_addr_23, align 1

ST_17: msg_V_1_addr_23 [1/1] 0.00ns
:117  %msg_V_1_addr_23 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex32_cast

ST_17: msg_V_1_load_9 [2/2] 2.39ns
:118  %msg_V_1_load_9 = load i8* %msg_V_1_addr_23, align 1

ST_17: msg_V_2_addr_23 [1/1] 0.00ns
:119  %msg_V_2_addr_23 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex32_cast

ST_17: msg_V_2_load_9 [2/2] 2.39ns
:120  %msg_V_2_load_9 = load i8* %msg_V_2_addr_23, align 1

ST_17: msg_V_3_addr_23 [1/1] 0.00ns
:121  %msg_V_3_addr_23 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex32_cast

ST_17: msg_V_3_load_9 [2/2] 2.39ns
:122  %msg_V_3_load_9 = load i8* %msg_V_3_addr_23, align 1


 <State 18>: 4.78ns
ST_18: msg_V_0_load_8 [1/2] 2.39ns
:104  %msg_V_0_load_8 = load i8* %msg_V_0_addr_22, align 8

ST_18: msg_V_1_load_8 [1/2] 2.39ns
:106  %msg_V_1_load_8 = load i8* %msg_V_1_addr_22, align 8

ST_18: msg_V_2_load_8 [1/2] 2.39ns
:108  %msg_V_2_load_8 = load i8* %msg_V_2_addr_22, align 8

ST_18: msg_V_3_load_8 [1/2] 2.39ns
:110  %msg_V_3_load_8 = load i8* %msg_V_3_addr_22, align 8

ST_18: r_V_6_8 [1/1] 0.00ns
:111  %r_V_6_8 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %msg_V_3_load_8, i8 %msg_V_2_load_8, i8 %msg_V_1_load_8, i8 %msg_V_0_load_8)

ST_18: stg_525 [1/1] 2.39ns
:112  store i32 %r_V_6_8, i32* getelementptr inbounds ([16 x i32]* @w_V, i64 0, i64 8), align 16

ST_18: msg_V_0_load_9 [1/2] 2.39ns
:116  %msg_V_0_load_9 = load i8* %msg_V_0_addr_23, align 1

ST_18: msg_V_1_load_9 [1/2] 2.39ns
:118  %msg_V_1_load_9 = load i8* %msg_V_1_addr_23, align 1

ST_18: msg_V_2_load_9 [1/2] 2.39ns
:120  %msg_V_2_load_9 = load i8* %msg_V_2_addr_23, align 1

ST_18: msg_V_3_load_9 [1/2] 2.39ns
:122  %msg_V_3_load_9 = load i8* %msg_V_3_addr_23, align 1

ST_18: r_V_6_9 [1/1] 0.00ns
:123  %r_V_6_9 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %msg_V_3_load_9, i8 %msg_V_2_load_9, i8 %msg_V_1_load_9, i8 %msg_V_0_load_9)

ST_18: stg_531 [1/1] 2.39ns
:124  store i32 %r_V_6_9, i32* getelementptr inbounds ([16 x i32]* @w_V, i64 0, i64 9), align 4

ST_18: newIndex33 [1/1] 0.00ns
:125  %newIndex33 = or i8 %newIndex23, 10

ST_18: newIndex33_cast [1/1] 0.00ns
:126  %newIndex33_cast = zext i8 %newIndex33 to i64

ST_18: msg_V_0_addr_24 [1/1] 0.00ns
:127  %msg_V_0_addr_24 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex33_cast

ST_18: msg_V_0_load_10 [2/2] 2.39ns
:128  %msg_V_0_load_10 = load i8* %msg_V_0_addr_24, align 2

ST_18: msg_V_1_addr_24 [1/1] 0.00ns
:129  %msg_V_1_addr_24 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex33_cast

ST_18: msg_V_1_load_10 [2/2] 2.39ns
:130  %msg_V_1_load_10 = load i8* %msg_V_1_addr_24, align 2

ST_18: msg_V_2_addr_24 [1/1] 0.00ns
:131  %msg_V_2_addr_24 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex33_cast

ST_18: msg_V_2_load_10 [2/2] 2.39ns
:132  %msg_V_2_load_10 = load i8* %msg_V_2_addr_24, align 2

ST_18: msg_V_3_addr_24 [1/1] 0.00ns
:133  %msg_V_3_addr_24 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex33_cast

ST_18: msg_V_3_load_10 [2/2] 2.39ns
:134  %msg_V_3_load_10 = load i8* %msg_V_3_addr_24, align 2

ST_18: newIndex34 [1/1] 0.00ns
:137  %newIndex34 = or i8 %newIndex23, 11

ST_18: newIndex34_cast [1/1] 0.00ns
:138  %newIndex34_cast = zext i8 %newIndex34 to i64

ST_18: msg_V_0_addr_25 [1/1] 0.00ns
:139  %msg_V_0_addr_25 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex34_cast

ST_18: msg_V_0_load_11 [2/2] 2.39ns
:140  %msg_V_0_load_11 = load i8* %msg_V_0_addr_25, align 1

ST_18: msg_V_1_addr_25 [1/1] 0.00ns
:141  %msg_V_1_addr_25 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex34_cast

ST_18: msg_V_1_load_11 [2/2] 2.39ns
:142  %msg_V_1_load_11 = load i8* %msg_V_1_addr_25, align 1

ST_18: msg_V_2_addr_25 [1/1] 0.00ns
:143  %msg_V_2_addr_25 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex34_cast

ST_18: msg_V_2_load_11 [2/2] 2.39ns
:144  %msg_V_2_load_11 = load i8* %msg_V_2_addr_25, align 1

ST_18: msg_V_3_addr_25 [1/1] 0.00ns
:145  %msg_V_3_addr_25 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex34_cast

ST_18: msg_V_3_load_11 [2/2] 2.39ns
:146  %msg_V_3_load_11 = load i8* %msg_V_3_addr_25, align 1


 <State 19>: 4.78ns
ST_19: msg_V_0_load_10 [1/2] 2.39ns
:128  %msg_V_0_load_10 = load i8* %msg_V_0_addr_24, align 2

ST_19: msg_V_1_load_10 [1/2] 2.39ns
:130  %msg_V_1_load_10 = load i8* %msg_V_1_addr_24, align 2

ST_19: msg_V_2_load_10 [1/2] 2.39ns
:132  %msg_V_2_load_10 = load i8* %msg_V_2_addr_24, align 2

ST_19: msg_V_3_load_10 [1/2] 2.39ns
:134  %msg_V_3_load_10 = load i8* %msg_V_3_addr_24, align 2

ST_19: r_V_6_s [1/1] 0.00ns
:135  %r_V_6_s = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %msg_V_3_load_10, i8 %msg_V_2_load_10, i8 %msg_V_1_load_10, i8 %msg_V_0_load_10)

ST_19: stg_557 [1/1] 2.39ns
:136  store i32 %r_V_6_s, i32* getelementptr inbounds ([16 x i32]* @w_V, i64 0, i64 10), align 8

ST_19: msg_V_0_load_11 [1/2] 2.39ns
:140  %msg_V_0_load_11 = load i8* %msg_V_0_addr_25, align 1

ST_19: msg_V_1_load_11 [1/2] 2.39ns
:142  %msg_V_1_load_11 = load i8* %msg_V_1_addr_25, align 1

ST_19: msg_V_2_load_11 [1/2] 2.39ns
:144  %msg_V_2_load_11 = load i8* %msg_V_2_addr_25, align 1

ST_19: msg_V_3_load_11 [1/2] 2.39ns
:146  %msg_V_3_load_11 = load i8* %msg_V_3_addr_25, align 1

ST_19: r_V_6_10 [1/1] 0.00ns
:147  %r_V_6_10 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %msg_V_3_load_11, i8 %msg_V_2_load_11, i8 %msg_V_1_load_11, i8 %msg_V_0_load_11)

ST_19: stg_563 [1/1] 2.39ns
:148  store i32 %r_V_6_10, i32* getelementptr inbounds ([16 x i32]* @w_V, i64 0, i64 11), align 4

ST_19: newIndex35 [1/1] 0.00ns
:149  %newIndex35 = or i8 %newIndex23, 12

ST_19: newIndex35_cast [1/1] 0.00ns
:150  %newIndex35_cast = zext i8 %newIndex35 to i64

ST_19: msg_V_0_addr_26 [1/1] 0.00ns
:151  %msg_V_0_addr_26 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex35_cast

ST_19: msg_V_0_load_12 [2/2] 2.39ns
:152  %msg_V_0_load_12 = load i8* %msg_V_0_addr_26, align 4

ST_19: msg_V_1_addr_26 [1/1] 0.00ns
:153  %msg_V_1_addr_26 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex35_cast

ST_19: msg_V_1_load_12 [2/2] 2.39ns
:154  %msg_V_1_load_12 = load i8* %msg_V_1_addr_26, align 4

ST_19: msg_V_2_addr_26 [1/1] 0.00ns
:155  %msg_V_2_addr_26 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex35_cast

ST_19: msg_V_2_load_12 [2/2] 2.39ns
:156  %msg_V_2_load_12 = load i8* %msg_V_2_addr_26, align 4

ST_19: msg_V_3_addr_26 [1/1] 0.00ns
:157  %msg_V_3_addr_26 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex35_cast

ST_19: msg_V_3_load_12 [2/2] 2.39ns
:158  %msg_V_3_load_12 = load i8* %msg_V_3_addr_26, align 4

ST_19: newIndex36 [1/1] 0.00ns
:161  %newIndex36 = or i8 %newIndex23, 13

ST_19: newIndex36_cast [1/1] 0.00ns
:162  %newIndex36_cast = zext i8 %newIndex36 to i64

ST_19: msg_V_0_addr_27 [1/1] 0.00ns
:163  %msg_V_0_addr_27 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex36_cast

ST_19: msg_V_0_load_13 [2/2] 2.39ns
:164  %msg_V_0_load_13 = load i8* %msg_V_0_addr_27, align 1

ST_19: msg_V_1_addr_27 [1/1] 0.00ns
:165  %msg_V_1_addr_27 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex36_cast

ST_19: msg_V_1_load_13 [2/2] 2.39ns
:166  %msg_V_1_load_13 = load i8* %msg_V_1_addr_27, align 1

ST_19: msg_V_2_addr_27 [1/1] 0.00ns
:167  %msg_V_2_addr_27 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex36_cast

ST_19: msg_V_2_load_13 [2/2] 2.39ns
:168  %msg_V_2_load_13 = load i8* %msg_V_2_addr_27, align 1

ST_19: msg_V_3_addr_27 [1/1] 0.00ns
:169  %msg_V_3_addr_27 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex36_cast

ST_19: msg_V_3_load_13 [2/2] 2.39ns
:170  %msg_V_3_load_13 = load i8* %msg_V_3_addr_27, align 1


 <State 20>: 4.78ns
ST_20: msg_V_0_load_12 [1/2] 2.39ns
:152  %msg_V_0_load_12 = load i8* %msg_V_0_addr_26, align 4

ST_20: msg_V_1_load_12 [1/2] 2.39ns
:154  %msg_V_1_load_12 = load i8* %msg_V_1_addr_26, align 4

ST_20: msg_V_2_load_12 [1/2] 2.39ns
:156  %msg_V_2_load_12 = load i8* %msg_V_2_addr_26, align 4

ST_20: msg_V_3_load_12 [1/2] 2.39ns
:158  %msg_V_3_load_12 = load i8* %msg_V_3_addr_26, align 4

ST_20: r_V_6_11 [1/1] 0.00ns
:159  %r_V_6_11 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %msg_V_3_load_12, i8 %msg_V_2_load_12, i8 %msg_V_1_load_12, i8 %msg_V_0_load_12)

ST_20: stg_589 [1/1] 2.39ns
:160  store i32 %r_V_6_11, i32* getelementptr inbounds ([16 x i32]* @w_V, i64 0, i64 12), align 16

ST_20: msg_V_0_load_13 [1/2] 2.39ns
:164  %msg_V_0_load_13 = load i8* %msg_V_0_addr_27, align 1

ST_20: msg_V_1_load_13 [1/2] 2.39ns
:166  %msg_V_1_load_13 = load i8* %msg_V_1_addr_27, align 1

ST_20: msg_V_2_load_13 [1/2] 2.39ns
:168  %msg_V_2_load_13 = load i8* %msg_V_2_addr_27, align 1

ST_20: msg_V_3_load_13 [1/2] 2.39ns
:170  %msg_V_3_load_13 = load i8* %msg_V_3_addr_27, align 1

ST_20: r_V_6_12 [1/1] 0.00ns
:171  %r_V_6_12 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %msg_V_3_load_13, i8 %msg_V_2_load_13, i8 %msg_V_1_load_13, i8 %msg_V_0_load_13)

ST_20: stg_595 [1/1] 2.39ns
:172  store i32 %r_V_6_12, i32* getelementptr inbounds ([16 x i32]* @w_V, i64 0, i64 13), align 4

ST_20: newIndex37 [1/1] 0.00ns
:173  %newIndex37 = or i8 %newIndex23, 14

ST_20: newIndex37_cast [1/1] 0.00ns
:174  %newIndex37_cast = zext i8 %newIndex37 to i64

ST_20: msg_V_0_addr_28 [1/1] 0.00ns
:175  %msg_V_0_addr_28 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex37_cast

ST_20: msg_V_0_load_14 [2/2] 2.39ns
:176  %msg_V_0_load_14 = load i8* %msg_V_0_addr_28, align 2

ST_20: msg_V_1_addr_28 [1/1] 0.00ns
:177  %msg_V_1_addr_28 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex37_cast

ST_20: msg_V_1_load_14 [2/2] 2.39ns
:178  %msg_V_1_load_14 = load i8* %msg_V_1_addr_28, align 2

ST_20: msg_V_2_addr_28 [1/1] 0.00ns
:179  %msg_V_2_addr_28 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex37_cast

ST_20: msg_V_2_load_14 [2/2] 2.39ns
:180  %msg_V_2_load_14 = load i8* %msg_V_2_addr_28, align 2

ST_20: msg_V_3_addr_28 [1/1] 0.00ns
:181  %msg_V_3_addr_28 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex37_cast

ST_20: msg_V_3_load_14 [2/2] 2.39ns
:182  %msg_V_3_load_14 = load i8* %msg_V_3_addr_28, align 2

ST_20: newIndex38 [1/1] 0.00ns
:185  %newIndex38 = or i8 %newIndex23, 15

ST_20: newIndex38_cast [1/1] 0.00ns
:186  %newIndex38_cast = zext i8 %newIndex38 to i64

ST_20: msg_V_0_addr_29 [1/1] 0.00ns
:187  %msg_V_0_addr_29 = getelementptr [80 x i8]* @msg_V_0, i64 0, i64 %newIndex38_cast

ST_20: msg_V_0_load_15 [2/2] 2.39ns
:188  %msg_V_0_load_15 = load i8* %msg_V_0_addr_29, align 1

ST_20: msg_V_1_addr_29 [1/1] 0.00ns
:189  %msg_V_1_addr_29 = getelementptr [80 x i8]* @msg_V_1, i64 0, i64 %newIndex38_cast

ST_20: msg_V_1_load_15 [2/2] 2.39ns
:190  %msg_V_1_load_15 = load i8* %msg_V_1_addr_29, align 1

ST_20: msg_V_2_addr_29 [1/1] 0.00ns
:191  %msg_V_2_addr_29 = getelementptr [80 x i8]* @msg_V_2, i64 0, i64 %newIndex38_cast

ST_20: msg_V_2_load_15 [2/2] 2.39ns
:192  %msg_V_2_load_15 = load i8* %msg_V_2_addr_29, align 1

ST_20: msg_V_3_addr_29 [1/1] 0.00ns
:193  %msg_V_3_addr_29 = getelementptr [80 x i8]* @msg_V_3, i64 0, i64 %newIndex38_cast

ST_20: msg_V_3_load_15 [2/2] 2.39ns
:194  %msg_V_3_load_15 = load i8* %msg_V_3_addr_29, align 1


 <State 21>: 4.78ns
ST_21: stg_616 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str25) nounwind

ST_21: tmp_18 [1/1] 0.00ns
:1  %tmp_18 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str25)

ST_21: stg_618 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecLoopTripCount(i32 100, i32 100, i32 100, [1 x i8]* @p_str19) nounwind

ST_21: msg_V_0_load_14 [1/2] 2.39ns
:176  %msg_V_0_load_14 = load i8* %msg_V_0_addr_28, align 2

ST_21: msg_V_1_load_14 [1/2] 2.39ns
:178  %msg_V_1_load_14 = load i8* %msg_V_1_addr_28, align 2

ST_21: msg_V_2_load_14 [1/2] 2.39ns
:180  %msg_V_2_load_14 = load i8* %msg_V_2_addr_28, align 2

ST_21: msg_V_3_load_14 [1/2] 2.39ns
:182  %msg_V_3_load_14 = load i8* %msg_V_3_addr_28, align 2

ST_21: r_V_6_13 [1/1] 0.00ns
:183  %r_V_6_13 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %msg_V_3_load_14, i8 %msg_V_2_load_14, i8 %msg_V_1_load_14, i8 %msg_V_0_load_14)

ST_21: stg_624 [1/1] 2.39ns
:184  store i32 %r_V_6_13, i32* getelementptr inbounds ([16 x i32]* @w_V, i64 0, i64 14), align 8

ST_21: msg_V_0_load_15 [1/2] 2.39ns
:188  %msg_V_0_load_15 = load i8* %msg_V_0_addr_29, align 1

ST_21: msg_V_1_load_15 [1/2] 2.39ns
:190  %msg_V_1_load_15 = load i8* %msg_V_1_addr_29, align 1

ST_21: msg_V_2_load_15 [1/2] 2.39ns
:192  %msg_V_2_load_15 = load i8* %msg_V_2_addr_29, align 1

ST_21: msg_V_3_load_15 [1/2] 2.39ns
:194  %msg_V_3_load_15 = load i8* %msg_V_3_addr_29, align 1

ST_21: r_V_6_14 [1/1] 0.00ns
:195  %r_V_6_14 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %msg_V_3_load_15, i8 %msg_V_2_load_15, i8 %msg_V_1_load_15, i8 %msg_V_0_load_15)

ST_21: stg_630 [1/1] 2.39ns
:196  store i32 %r_V_6_14, i32* getelementptr inbounds ([16 x i32]* @w_V, i64 0, i64 15), align 4

ST_21: h0_V_load [1/1] 0.00ns
:197  %h0_V_load = load i32* @h0_V, align 4

ST_21: stg_632 [1/1] 3.03ns
:198  store i32 %h0_V_load, i32* @a_V, align 4

ST_21: h1_V_load [1/1] 0.00ns
:199  %h1_V_load = load i32* @h1_V, align 4

ST_21: stg_634 [1/1] 3.03ns
:200  store i32 %h1_V_load, i32* @b_V, align 4

ST_21: h2_V_load [1/1] 0.00ns
:201  %h2_V_load = load i32* @h2_V, align 4

ST_21: stg_636 [1/1] 3.03ns
:202  store i32 %h2_V_load, i32* @c_V, align 4

ST_21: h3_V_load [1/1] 0.00ns
:203  %h3_V_load = load i32* @h3_V, align 4

ST_21: stg_638 [1/1] 3.03ns
:204  store i32 %h3_V_load, i32* @d_V, align 4

ST_21: stg_639 [1/1] 2.10ns
:205  br label %15


 <State 22>: 14.56ns
ST_22: t_V_7 [1/1] 0.00ns
:0  %t_V_7 = phi i8 [ 0, %14 ], [ %i_V_1_2, %left_rotate.exit.2 ]

ST_22: stg_641 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 22, i64 22, i64 22)

ST_22: exitcond [1/1] 3.40ns
:2  %exitcond = icmp eq i8 %t_V_7, 64

ST_22: stg_643 [1/1] 0.00ns
:3  br i1 %exitcond, label %40, label %17

ST_22: stg_644 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str27) nounwind

ST_22: tmp_48 [1/1] 0.00ns
:1  %tmp_48 = call i4 @_ssdm_op_PartSelect.i4.i8.i32.i32(i8 %t_V_7, i32 4, i32 7)

ST_22: icmp3 [1/1] 2.80ns
:2  %icmp3 = icmp eq i4 %tmp_48, 0

ST_22: stg_647 [1/1] 0.00ns
:3  br i1 %icmp3, label %16, label %20

ST_22: tmp_50 [1/1] 0.00ns
:0  %tmp_50 = call i3 @_ssdm_op_PartSelect.i3.i8.i32.i32(i8 %t_V_7, i32 5, i32 7)

ST_22: icmp4 [1/1] 2.61ns
:1  %icmp4 = icmp eq i3 %tmp_50, 0

ST_22: stg_650 [1/1] 0.00ns
:2  br i1 %icmp4, label %19, label %22

ST_22: tmp_23 [1/1] 3.40ns
:0  %tmp_23 = icmp ult i8 %t_V_7, 48

ST_22: stg_652 [1/1] 0.00ns
:1  br i1 %tmp_23, label %21, label %23

ST_22: d_V_load_4 [1/1] 0.00ns
:0  %d_V_load_4 = load i32* @d_V, align 4

ST_22: i_op_assign_2 [1/1] 2.00ns
:1  %i_op_assign_2 = xor i32 %d_V_load_4, -1

ST_22: b_V_load_4 [1/1] 0.00ns
:2  %b_V_load_4 = load i32* @b_V, align 4

ST_22: r_V_7 [1/1] 2.00ns
:3  %r_V_7 = or i32 %b_V_load_4, %i_op_assign_2

ST_22: c_V_load_4 [1/1] 0.00ns
:4  %c_V_load_4 = load i32* @c_V, align 4

ST_22: r_V_1 [1/1] 2.00ns
:5  %r_V_1 = xor i32 %c_V_load_4, %r_V_7

ST_22: stg_659 [1/1] 3.94ns
:6  store i32 %r_V_1, i32* @f_V, align 4

ST_22: tmp_104_cast [1/1] 0.00ns
:7  %tmp_104_cast = zext i8 %t_V_7 to i11

ST_22: p_shl1 [1/1] 0.00ns
:8  %p_shl1 = call i11 @_ssdm_op_BitConcatenate.i11.i8.i3(i8 %t_V_7, i3 0)

ST_22: tmp_27 [1/1] 3.62ns
:9  %tmp_27 = sub i11 %p_shl1, %tmp_104_cast

ST_22: stg_663 [1/1] 2.55ns
:10  br label %18

ST_22: b_V_load_3 [1/1] 0.00ns
:0  %b_V_load_3 = load i32* @b_V, align 4

ST_22: c_V_load_3 [1/1] 0.00ns
:1  %c_V_load_3 = load i32* @c_V, align 4

ST_22: d_V_load_3 [1/1] 0.00ns
:2  %d_V_load_3 = load i32* @d_V, align 4

ST_22: tmp5 [1/1] 2.00ns
:3  %tmp5 = xor i32 %b_V_load_3, %d_V_load_3

ST_22: r_V_8 [1/1] 2.00ns
:4  %r_V_8 = xor i32 %tmp5, %c_V_load_3

ST_22: stg_669 [1/1] 3.94ns
:5  store i32 %r_V_8, i32* @f_V, align 4

ST_22: tmp_53 [1/1] 0.00ns
:6  %tmp_53 = shl i8 %t_V_7, 2

ST_22: tmp_25 [1/1] 3.50ns
:7  %tmp_25 = sub i8 %tmp_53, %t_V_7

ST_22: tmp_26 [1/1] 3.50ns
:8  %tmp_26 = add i8 5, %tmp_25

ST_22: tmp_103_cast [1/1] 0.00ns
:9  %tmp_103_cast = zext i8 %tmp_26 to i11

ST_22: stg_674 [1/1] 2.55ns
:10  br label %18

ST_22: d_V_load_2 [1/1] 0.00ns
:0  %d_V_load_2 = load i32* @d_V, align 4

ST_22: b_V_load_2 [1/1] 0.00ns
:1  %b_V_load_2 = load i32* @b_V, align 4

ST_22: r_V_3 [1/1] 2.00ns
:2  %r_V_3 = and i32 %b_V_load_2, %d_V_load_2

ST_22: i_op_assign_1 [1/1] 2.00ns
:3  %i_op_assign_1 = xor i32 %d_V_load_2, -1

ST_22: c_V_load_2 [1/1] 0.00ns
:4  %c_V_load_2 = load i32* @c_V, align 4

ST_22: r_V_4 [1/1] 2.00ns
:5  %r_V_4 = and i32 %c_V_load_2, %i_op_assign_1

ST_22: r_V_5 [1/1] 2.00ns
:6  %r_V_5 = or i32 %r_V_4, %r_V_3

ST_22: stg_682 [1/1] 3.94ns
:7  store i32 %r_V_5, i32* @f_V, align 4

ST_22: tmp_51 [1/1] 0.00ns
:8  %tmp_51 = trunc i8 %t_V_7 to i6

ST_22: tmp_52 [1/1] 0.00ns
:9  %tmp_52 = trunc i8 %t_V_7 to i5

ST_22: p_shl [1/1] 0.00ns
:10  %p_shl = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %tmp_52, i2 0)

ST_22: p_shl_cast [1/1] 0.00ns
:11  %p_shl_cast = zext i7 %p_shl to i8

ST_22: tmp4 [1/1] 3.50ns
:12  %tmp4 = add i6 1, %tmp_51

ST_22: tmp4_cast [1/1] 0.00ns
:13  %tmp4_cast = zext i6 %tmp4 to i8

ST_22: tmp_22 [1/1] 3.50ns
:14  %tmp_22 = add i8 %p_shl_cast, %tmp4_cast

ST_22: tmp_99_cast [1/1] 0.00ns
:15  %tmp_99_cast = zext i8 %tmp_22 to i11

ST_22: stg_691 [1/1] 2.55ns
:16  br label %18

ST_22: storemerge1203_in [1/1] 0.00ns
:0  %storemerge1203_in = phi i11 [ %tmp_99_cast, %19 ], [ %tmp_27, %23 ], [ %tmp_103_cast, %21 ]

ST_22: tmp_54 [1/1] 0.00ns
:1  %tmp_54 = trunc i11 %storemerge1203_in to i4

ST_22: stg_694 [1/1] 2.14ns
:2  br label %left_rotate.exit.0

ST_22: b_V_load_1 [1/1] 0.00ns
:0  %b_V_load_1 = load i32* @b_V, align 4

ST_22: c_V_load_1 [1/1] 0.00ns
:1  %c_V_load_1 = load i32* @c_V, align 4

ST_22: r_V_s [1/1] 2.00ns
:2  %r_V_s = and i32 %c_V_load_1, %b_V_load_1

ST_22: i_op_assign [1/1] 2.00ns
:3  %i_op_assign = xor i32 %b_V_load_1, -1

ST_22: d_V_load_1 [1/1] 0.00ns
:4  %d_V_load_1 = load i32* @d_V, align 4

ST_22: r_V_2 [1/1] 2.00ns
:5  %r_V_2 = and i32 %d_V_load_1, %i_op_assign

ST_22: r_V_9 [1/1] 2.00ns
:6  %r_V_9 = or i32 %r_V_2, %r_V_s

ST_22: stg_702 [1/1] 3.94ns
:7  store i32 %r_V_9, i32* @f_V, align 4

ST_22: tmp_49 [1/1] 0.00ns
:8  %tmp_49 = trunc i8 %t_V_7 to i4

ST_22: stg_704 [1/1] 2.14ns
:9  br label %left_rotate.exit.0

ST_22: storemerge2 [1/1] 0.00ns
left_rotate.exit.0:0  %storemerge2 = phi i4 [ %tmp_54, %18 ], [ %tmp_49, %16 ]

ST_22: storemerge2_cast [1/1] 0.00ns
left_rotate.exit.0:1  %storemerge2_cast = zext i4 %storemerge2 to i32

ST_22: stg_707 [1/1] 2.88ns
left_rotate.exit.0:2  store i32 %storemerge2_cast, i32* @g_V, align 4

ST_22: tmp_28 [1/1] 0.00ns
left_rotate.exit.0:11  %tmp_28 = zext i8 %t_V_7 to i64

ST_22: k_V_addr [1/1] 0.00ns
left_rotate.exit.0:12  %k_V_addr = getelementptr [64 x i32]* @k_V, i64 0, i64 %tmp_28

ST_22: k_V_load [2/2] 2.39ns
left_rotate.exit.0:13  %k_V_load = load i32* %k_V_addr, align 4

ST_22: tmp_29 [1/1] 0.00ns
left_rotate.exit.0:14  %tmp_29 = zext i4 %storemerge2 to i64

ST_22: w_V_addr [1/1] 0.00ns
left_rotate.exit.0:15  %w_V_addr = getelementptr [16 x i32]* @w_V, i64 0, i64 %tmp_29

ST_22: w_V_load [2/2] 2.39ns
left_rotate.exit.0:16  %w_V_load = load i32* %w_V_addr, align 4

ST_22: r_V_addr [1/1] 0.00ns
left_rotate.exit.0:20  %r_V_addr = getelementptr [64 x i5]* @r_V, i64 0, i64 %tmp_28

ST_22: r_V_load [2/2] 2.39ns
left_rotate.exit.0:21  %r_V_load = load i5* %r_V_addr, align 1


 <State 23>: 10.83ns
ST_23: a_V_load_1 [1/1] 0.00ns
left_rotate.exit.0:9  %a_V_load_1 = load i32* @a_V, align 4

ST_23: f_V_load [1/1] 0.00ns
left_rotate.exit.0:10  %f_V_load = load i32* @f_V, align 4

ST_23: k_V_load [1/2] 2.39ns
left_rotate.exit.0:13  %k_V_load = load i32* %k_V_addr, align 4

ST_23: w_V_load [1/2] 2.39ns
left_rotate.exit.0:16  %w_V_load = load i32* %w_V_addr, align 4

ST_23: tmp2 [1/1] 4.22ns
left_rotate.exit.0:17  %tmp2 = add i32 %f_V_load, %k_V_load

ST_23: tmp3 [1/1] 4.22ns
left_rotate.exit.0:18  %tmp3 = add i32 %a_V_load_1, %w_V_load

ST_23: tmp_30 [1/1] 4.22ns
left_rotate.exit.0:19  %tmp_30 = add i32 %tmp3, %tmp2

ST_23: r_V_load [1/2] 2.39ns
left_rotate.exit.0:21  %r_V_load = load i5* %r_V_addr, align 1

ST_23: r_V_11 [1/1] 3.50ns
left_rotate.exit.0:24  %r_V_11 = sub i5 0, %r_V_load


 <State 24>: 16.52ns
ST_24: d_V_load_5 [1/1] 0.00ns
left_rotate.exit.0:3  %d_V_load_5 = load i32* @d_V, align 4

ST_24: stg_726 [1/1] 2.88ns
left_rotate.exit.0:4  store i32 %d_V_load_5, i32* @temp_V, align 4

ST_24: c_V_load_5 [1/1] 0.00ns
left_rotate.exit.0:5  %c_V_load_5 = load i32* @c_V, align 4

ST_24: stg_728 [1/1] 3.03ns
left_rotate.exit.0:6  store i32 %c_V_load_5, i32* @d_V, align 4

ST_24: b_V_load_5 [1/1] 0.00ns
left_rotate.exit.0:7  %b_V_load_5 = load i32* @b_V, align 4

ST_24: stg_730 [1/1] 3.03ns
left_rotate.exit.0:8  store i32 %b_V_load_5, i32* @c_V, align 4

ST_24: tmp_31 [1/1] 0.00ns
left_rotate.exit.0:22  %tmp_31 = zext i5 %r_V_load to i32

ST_24: r_V_10 [1/1] 7.28ns
left_rotate.exit.0:23  %r_V_10 = shl i32 %tmp_30, %tmp_31

ST_24: tmp_114_cast [1/1] 0.00ns
left_rotate.exit.0:25  %tmp_114_cast = zext i5 %r_V_11 to i32

ST_24: r_V_12 [1/1] 7.28ns
left_rotate.exit.0:26  %r_V_12 = lshr i32 %tmp_30, %tmp_114_cast

ST_24: r_V_13 [1/1] 2.00ns
left_rotate.exit.0:27  %r_V_13 = or i32 %r_V_12, %r_V_10

ST_24: tmp_32 [1/1] 4.22ns
left_rotate.exit.0:28  %tmp_32 = add i32 %b_V_load_5, %r_V_13

ST_24: stg_737 [1/1] 3.03ns
left_rotate.exit.0:29  store i32 %tmp_32, i32* @b_V, align 4

ST_24: stg_738 [1/1] 3.03ns
left_rotate.exit.0:30  store i32 %d_V_load_5, i32* @a_V, align 4

ST_24: i_V_1 [1/1] 3.50ns
left_rotate.exit.0:31  %i_V_1 = add i8 %t_V_7, 1

ST_24: exitcond_1 [1/1] 3.40ns
left_rotate.exit.0:32  %exitcond_1 = icmp eq i8 %i_V_1, 64

ST_24: stg_741 [1/1] 0.00ns
left_rotate.exit.0:33  br i1 %exitcond_1, label %40, label %25

ST_24: tmp_55 [1/1] 0.00ns
:0  %tmp_55 = call i4 @_ssdm_op_PartSelect.i4.i8.i32.i32(i8 %i_V_1, i32 4, i32 7)

ST_24: icmp5 [1/1] 2.80ns
:1  %icmp5 = icmp eq i4 %tmp_55, 0

ST_24: stg_744 [1/1] 0.00ns
:2  br i1 %icmp5, label %24, label %28

ST_24: tmp_57 [1/1] 0.00ns
:0  %tmp_57 = call i3 @_ssdm_op_PartSelect.i3.i8.i32.i32(i8 %i_V_1, i32 5, i32 7)

ST_24: icmp6 [1/1] 2.61ns
:1  %icmp6 = icmp eq i3 %tmp_57, 0

ST_24: stg_747 [1/1] 0.00ns
:2  br i1 %icmp6, label %27, label %30

ST_24: tmp_54_1 [1/1] 3.40ns
:0  %tmp_54_1 = icmp ult i8 %i_V_1, 48

ST_24: stg_749 [1/1] 0.00ns
:1  br i1 %tmp_54_1, label %29, label %31


 <State 25>: 14.56ns
ST_25: i_op_assign_2_1 [1/1] 2.00ns
:0  %i_op_assign_2_1 = xor i32 %c_V_load_5, -1

ST_25: r_V_30_1 [1/1] 2.00ns
:1  %r_V_30_1 = or i32 %tmp_32, %i_op_assign_2_1

ST_25: r_V_16_1 [1/1] 2.00ns
:2  %r_V_16_1 = xor i32 %b_V_load_5, %r_V_30_1

ST_25: stg_753 [1/1] 3.94ns
:3  store i32 %r_V_16_1, i32* @f_V, align 4

ST_25: tmp_58_1_cast [1/1] 0.00ns
:4  %tmp_58_1_cast = zext i8 %i_V_1 to i11

ST_25: p_shl10_1 [1/1] 0.00ns
:5  %p_shl10_1 = call i11 @_ssdm_op_BitConcatenate.i11.i8.i3(i8 %i_V_1, i3 0)

ST_25: tmp_59_1 [1/1] 3.62ns
:6  %tmp_59_1 = sub i11 %p_shl10_1, %tmp_58_1_cast

ST_25: stg_757 [1/1] 2.55ns
:7  br label %26

ST_25: tmp1 [1/1] 2.00ns
:0  %tmp1 = xor i32 %c_V_load_5, %tmp_32

ST_25: r_V_14_1 [1/1] 2.00ns
:1  %r_V_14_1 = xor i32 %tmp1, %b_V_load_5

ST_25: stg_760 [1/1] 3.94ns
:2  store i32 %r_V_14_1, i32* @f_V, align 4

ST_25: tmp_60 [1/1] 0.00ns
:3  %tmp_60 = shl i8 %i_V_1, 2

ST_25: tmp_56_1 [1/1] 3.50ns
:4  %tmp_56_1 = sub i8 %tmp_60, %i_V_1

ST_25: tmp_57_1 [1/1] 3.50ns
:5  %tmp_57_1 = add i8 5, %tmp_56_1

ST_25: tmp_57_1_cast [1/1] 0.00ns
:6  %tmp_57_1_cast = zext i8 %tmp_57_1 to i11

ST_25: stg_765 [1/1] 2.55ns
:7  br label %26

ST_25: r_V_27_1 [1/1] 2.00ns
:0  %r_V_27_1 = and i32 %c_V_load_5, %tmp_32

ST_25: i_op_assign_1_1 [1/1] 2.00ns
:1  %i_op_assign_1_1 = xor i32 %c_V_load_5, -1

ST_25: r_V_28_1 [1/1] 2.00ns
:2  %r_V_28_1 = and i32 %b_V_load_5, %i_op_assign_1_1

ST_25: r_V_12_1 [1/1] 2.00ns
:3  %r_V_12_1 = or i32 %r_V_28_1, %r_V_27_1

ST_25: stg_770 [1/1] 3.94ns
:4  store i32 %r_V_12_1, i32* @f_V, align 4

ST_25: tmp_58 [1/1] 0.00ns
:5  %tmp_58 = trunc i8 %i_V_1 to i6

ST_25: tmp_59 [1/1] 0.00ns
:6  %tmp_59 = trunc i8 %i_V_1 to i5

ST_25: p_shl_1 [1/1] 0.00ns
:7  %p_shl_1 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %tmp_59, i2 0)

ST_25: p_shl_1_cast [1/1] 0.00ns
:8  %p_shl_1_cast = zext i7 %p_shl_1 to i8

ST_25: tmp9 [1/1] 3.50ns
:9  %tmp9 = add i6 1, %tmp_58

ST_25: tmp9_cast [1/1] 0.00ns
:10  %tmp9_cast = zext i6 %tmp9 to i8

ST_25: tmp_53_1 [1/1] 3.50ns
:11  %tmp_53_1 = add i8 %p_shl_1_cast, %tmp9_cast

ST_25: tmp_53_1_cast [1/1] 0.00ns
:12  %tmp_53_1_cast = zext i8 %tmp_53_1 to i11

ST_25: stg_779 [1/1] 2.55ns
:13  br label %26

ST_25: storemerge1203_in_1 [1/1] 0.00ns
:0  %storemerge1203_in_1 = phi i11 [ %tmp_53_1_cast, %27 ], [ %tmp_59_1, %31 ], [ %tmp_57_1_cast, %29 ]

ST_25: tmp_61 [1/1] 0.00ns
:1  %tmp_61 = trunc i11 %storemerge1203_in_1 to i4

ST_25: stg_782 [1/1] 2.14ns
:2  br label %left_rotate.exit.1

ST_25: r_V_25_1 [1/1] 2.00ns
:0  %r_V_25_1 = and i32 %b_V_load_5, %tmp_32

ST_25: i_op_assign_s [1/1] 2.00ns
:1  %i_op_assign_s = xor i32 %tmp_32, -1

ST_25: r_V_26_1 [1/1] 2.00ns
:2  %r_V_26_1 = and i32 %c_V_load_5, %i_op_assign_s

ST_25: r_V_9_1 [1/1] 2.00ns
:3  %r_V_9_1 = or i32 %r_V_26_1, %r_V_25_1

ST_25: stg_787 [1/1] 3.94ns
:4  store i32 %r_V_9_1, i32* @f_V, align 4

ST_25: tmp_56 [1/1] 0.00ns
:5  %tmp_56 = trunc i8 %i_V_1 to i4

ST_25: stg_789 [1/1] 2.14ns
:6  br label %left_rotate.exit.1

ST_25: storemerge2_1 [1/1] 0.00ns
left_rotate.exit.1:0  %storemerge2_1 = phi i4 [ %tmp_61, %26 ], [ %tmp_56, %24 ]

ST_25: storemerge2_1_cast [1/1] 0.00ns
left_rotate.exit.1:1  %storemerge2_1_cast = zext i4 %storemerge2_1 to i32

ST_25: stg_792 [1/1] 2.88ns
left_rotate.exit.1:2  store i32 %storemerge2_1_cast, i32* @g_V, align 4

ST_25: stg_793 [1/1] 2.88ns
left_rotate.exit.1:3  store i32 %c_V_load_5, i32* @temp_V, align 4

ST_25: stg_794 [1/1] 3.03ns
left_rotate.exit.1:4  store i32 %b_V_load_5, i32* @d_V, align 4

ST_25: stg_795 [1/1] 3.03ns
left_rotate.exit.1:5  store i32 %tmp_32, i32* @c_V, align 4

ST_25: tmp_60_1 [1/1] 0.00ns
left_rotate.exit.1:7  %tmp_60_1 = zext i8 %i_V_1 to i64

ST_25: k_V_addr_1 [1/1] 0.00ns
left_rotate.exit.1:8  %k_V_addr_1 = getelementptr [64 x i32]* @k_V, i64 0, i64 %tmp_60_1

ST_25: k_V_load_1 [2/2] 2.39ns
left_rotate.exit.1:9  %k_V_load_1 = load i32* %k_V_addr_1, align 4

ST_25: tmp_61_1 [1/1] 0.00ns
left_rotate.exit.1:10  %tmp_61_1 = zext i4 %storemerge2_1 to i64

ST_25: w_V_addr_1 [1/1] 0.00ns
left_rotate.exit.1:11  %w_V_addr_1 = getelementptr [16 x i32]* @w_V, i64 0, i64 %tmp_61_1

ST_25: w_V_load_1 [2/2] 2.39ns
left_rotate.exit.1:12  %w_V_load_1 = load i32* %w_V_addr_1, align 4

ST_25: r_V_addr_1 [1/1] 0.00ns
left_rotate.exit.1:16  %r_V_addr_1 = getelementptr [64 x i5]* @r_V, i64 0, i64 %tmp_60_1

ST_25: r_V_load_1 [2/2] 2.39ns
left_rotate.exit.1:17  %r_V_load_1 = load i5* %r_V_addr_1, align 1

ST_25: stg_804 [1/1] 3.03ns
left_rotate.exit.1:26  store i32 %c_V_load_5, i32* @a_V, align 4


 <State 26>: 10.83ns
ST_26: f_V_load_1 [1/1] 0.00ns
left_rotate.exit.1:6  %f_V_load_1 = load i32* @f_V, align 4

ST_26: k_V_load_1 [1/2] 2.39ns
left_rotate.exit.1:9  %k_V_load_1 = load i32* %k_V_addr_1, align 4

ST_26: w_V_load_1 [1/2] 2.39ns
left_rotate.exit.1:12  %w_V_load_1 = load i32* %w_V_addr_1, align 4

ST_26: tmp7 [1/1] 4.22ns
left_rotate.exit.1:13  %tmp7 = add i32 %f_V_load_1, %k_V_load_1

ST_26: tmp8 [1/1] 4.22ns
left_rotate.exit.1:14  %tmp8 = add i32 %d_V_load_5, %w_V_load_1

ST_26: tmp_64_1 [1/1] 4.22ns
left_rotate.exit.1:15  %tmp_64_1 = add i32 %tmp8, %tmp7

ST_26: r_V_load_1 [1/2] 2.39ns
left_rotate.exit.1:17  %r_V_load_1 = load i5* %r_V_addr_1, align 1

ST_26: r_V_32_1 [1/1] 3.50ns
left_rotate.exit.1:20  %r_V_32_1 = sub i5 0, %r_V_load_1


 <State 27>: 16.52ns
ST_27: tmp_65_1 [1/1] 0.00ns
left_rotate.exit.1:18  %tmp_65_1 = zext i5 %r_V_load_1 to i32

ST_27: r_V_31_1 [1/1] 7.28ns
left_rotate.exit.1:19  %r_V_31_1 = shl i32 %tmp_64_1, %tmp_65_1

ST_27: tmp_118_cast [1/1] 0.00ns
left_rotate.exit.1:21  %tmp_118_cast = zext i5 %r_V_32_1 to i32

ST_27: r_V_33_1 [1/1] 7.28ns
left_rotate.exit.1:22  %r_V_33_1 = lshr i32 %tmp_64_1, %tmp_118_cast

ST_27: r_V_21_1 [1/1] 2.00ns
left_rotate.exit.1:23  %r_V_21_1 = or i32 %r_V_33_1, %r_V_31_1

ST_27: tmp_68_1 [1/1] 4.22ns
left_rotate.exit.1:24  %tmp_68_1 = add i32 %tmp_32, %r_V_21_1

ST_27: stg_819 [1/1] 3.03ns
left_rotate.exit.1:25  store i32 %tmp_68_1, i32* @b_V, align 4

ST_27: i_V_1_1 [1/1] 3.50ns
left_rotate.exit.1:27  %i_V_1_1 = add i8 %t_V_7, 2

ST_27: exitcond_2 [1/1] 3.40ns
left_rotate.exit.1:28  %exitcond_2 = icmp eq i8 %i_V_1_1, 64

ST_27: stg_822 [1/1] 0.00ns
left_rotate.exit.1:29  br i1 %exitcond_2, label %40, label %33

ST_27: tmp_62 [1/1] 0.00ns
:0  %tmp_62 = call i4 @_ssdm_op_PartSelect.i4.i8.i32.i32(i8 %i_V_1_1, i32 4, i32 7)

ST_27: icmp7 [1/1] 2.80ns
:1  %icmp7 = icmp eq i4 %tmp_62, 0

ST_27: stg_825 [1/1] 0.00ns
:2  br i1 %icmp7, label %32, label %36

ST_27: tmp_64 [1/1] 0.00ns
:0  %tmp_64 = call i3 @_ssdm_op_PartSelect.i3.i8.i32.i32(i8 %i_V_1_1, i32 5, i32 7)

ST_27: icmp8 [1/1] 2.61ns
:1  %icmp8 = icmp eq i3 %tmp_64, 0

ST_27: stg_828 [1/1] 0.00ns
:2  br i1 %icmp8, label %35, label %38

ST_27: tmp_54_2 [1/1] 3.40ns
:0  %tmp_54_2 = icmp ult i8 %i_V_1_1, 48

ST_27: stg_830 [1/1] 0.00ns
:1  br i1 %tmp_54_2, label %37, label %39

ST_27: a_V_load [1/1] 0.00ns
:0  %a_V_load = load i32* @a_V, align 4

ST_27: tmp_33 [1/1] 4.22ns
:1  %tmp_33 = add i32 %a_V_load, %h0_V_load

ST_27: stg_833 [1/1] 2.66ns
:2  store i32 %tmp_33, i32* @h0_V, align 4

ST_27: c_V_load [1/1] 0.00ns
:6  %c_V_load = load i32* @c_V, align 4

ST_27: tmp_35 [1/1] 4.22ns
:7  %tmp_35 = add i32 %c_V_load, %h2_V_load

ST_27: stg_836 [1/1] 2.66ns
:8  store i32 %tmp_35, i32* @h2_V, align 4

ST_27: d_V_load [1/1] 0.00ns
:9  %d_V_load = load i32* @d_V, align 4

ST_27: tmp_36 [1/1] 4.22ns
:10  %tmp_36 = add i32 %d_V_load, %h3_V_load

ST_27: stg_839 [1/1] 2.66ns
:11  store i32 %tmp_36, i32* @h3_V, align 4

ST_27: tmp_37 [1/1] 4.22ns
:13  %tmp_37 = add i32 %offset_V_load, 64


 <State 28>: 14.56ns
ST_28: i_op_assign_2_2 [1/1] 2.00ns
:0  %i_op_assign_2_2 = xor i32 %b_V_load_5, -1

ST_28: r_V_30_2 [1/1] 2.00ns
:1  %r_V_30_2 = or i32 %tmp_68_1, %i_op_assign_2_2

ST_28: r_V_16_2 [1/1] 2.00ns
:2  %r_V_16_2 = xor i32 %tmp_32, %r_V_30_2

ST_28: stg_844 [1/1] 3.94ns
:3  store i32 %r_V_16_2, i32* @f_V, align 4

ST_28: tmp_58_2_cast [1/1] 0.00ns
:4  %tmp_58_2_cast = zext i8 %i_V_1_1 to i11

ST_28: p_shl10_2 [1/1] 0.00ns
:5  %p_shl10_2 = call i11 @_ssdm_op_BitConcatenate.i11.i8.i3(i8 %i_V_1_1, i3 0)

ST_28: tmp_59_2 [1/1] 3.62ns
:6  %tmp_59_2 = sub i11 %p_shl10_2, %tmp_58_2_cast

ST_28: stg_848 [1/1] 2.55ns
:7  br label %34

ST_28: tmp10 [1/1] 2.00ns
:0  %tmp10 = xor i32 %tmp_32, %tmp_68_1

ST_28: r_V_14_2 [1/1] 2.00ns
:1  %r_V_14_2 = xor i32 %tmp10, %b_V_load_5

ST_28: stg_851 [1/1] 3.94ns
:2  store i32 %r_V_14_2, i32* @f_V, align 4

ST_28: tmp_67 [1/1] 0.00ns
:3  %tmp_67 = shl i8 %i_V_1_1, 2

ST_28: tmp_56_2 [1/1] 3.50ns
:4  %tmp_56_2 = sub i8 %tmp_67, %i_V_1_1

ST_28: tmp_57_2 [1/1] 3.50ns
:5  %tmp_57_2 = add i8 5, %tmp_56_2

ST_28: tmp_57_2_cast [1/1] 0.00ns
:6  %tmp_57_2_cast = zext i8 %tmp_57_2 to i11

ST_28: stg_856 [1/1] 2.55ns
:7  br label %34

ST_28: r_V_27_2 [1/1] 2.00ns
:0  %r_V_27_2 = and i32 %b_V_load_5, %tmp_68_1

ST_28: i_op_assign_1_2 [1/1] 2.00ns
:1  %i_op_assign_1_2 = xor i32 %b_V_load_5, -1

ST_28: r_V_28_2 [1/1] 2.00ns
:2  %r_V_28_2 = and i32 %tmp_32, %i_op_assign_1_2

ST_28: r_V_12_2 [1/1] 2.00ns
:3  %r_V_12_2 = or i32 %r_V_28_2, %r_V_27_2

ST_28: stg_861 [1/1] 3.94ns
:4  store i32 %r_V_12_2, i32* @f_V, align 4

ST_28: tmp_65 [1/1] 0.00ns
:5  %tmp_65 = trunc i8 %i_V_1_1 to i6

ST_28: tmp_66 [1/1] 0.00ns
:6  %tmp_66 = trunc i8 %i_V_1_1 to i5

ST_28: p_shl_2 [1/1] 0.00ns
:7  %p_shl_2 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %tmp_66, i2 0)

ST_28: p_shl_2_cast [1/1] 0.00ns
:8  %p_shl_2_cast = zext i7 %p_shl_2 to i8

ST_28: tmp6 [1/1] 3.50ns
:9  %tmp6 = add i6 1, %tmp_65

ST_28: tmp14_cast [1/1] 0.00ns
:10  %tmp14_cast = zext i6 %tmp6 to i8

ST_28: tmp_53_2 [1/1] 3.50ns
:11  %tmp_53_2 = add i8 %p_shl_2_cast, %tmp14_cast

ST_28: tmp_53_2_cast [1/1] 0.00ns
:12  %tmp_53_2_cast = zext i8 %tmp_53_2 to i11

ST_28: stg_870 [1/1] 2.55ns
:13  br label %34

ST_28: storemerge1203_in_2 [1/1] 0.00ns
:0  %storemerge1203_in_2 = phi i11 [ %tmp_53_2_cast, %35 ], [ %tmp_59_2, %39 ], [ %tmp_57_2_cast, %37 ]

ST_28: tmp_68 [1/1] 0.00ns
:1  %tmp_68 = trunc i11 %storemerge1203_in_2 to i4

ST_28: stg_873 [1/1] 2.14ns
:2  br label %left_rotate.exit.2

ST_28: r_V_25_2 [1/1] 2.00ns
:0  %r_V_25_2 = and i32 %tmp_32, %tmp_68_1

ST_28: i_op_assign_3 [1/1] 2.00ns
:1  %i_op_assign_3 = xor i32 %tmp_68_1, -1

ST_28: r_V_26_2 [1/1] 2.00ns
:2  %r_V_26_2 = and i32 %b_V_load_5, %i_op_assign_3

ST_28: r_V_9_2 [1/1] 2.00ns
:3  %r_V_9_2 = or i32 %r_V_26_2, %r_V_25_2

ST_28: stg_878 [1/1] 3.94ns
:4  store i32 %r_V_9_2, i32* @f_V, align 4

ST_28: tmp_63 [1/1] 0.00ns
:5  %tmp_63 = trunc i8 %i_V_1_1 to i4

ST_28: stg_880 [1/1] 2.14ns
:6  br label %left_rotate.exit.2

ST_28: storemerge2_2 [1/1] 0.00ns
left_rotate.exit.2:0  %storemerge2_2 = phi i4 [ %tmp_68, %34 ], [ %tmp_63, %32 ]

ST_28: storemerge2_2_cast [1/1] 0.00ns
left_rotate.exit.2:1  %storemerge2_2_cast = zext i4 %storemerge2_2 to i32

ST_28: stg_883 [1/1] 2.88ns
left_rotate.exit.2:2  store i32 %storemerge2_2_cast, i32* @g_V, align 4

ST_28: stg_884 [1/1] 2.88ns
left_rotate.exit.2:3  store i32 %b_V_load_5, i32* @temp_V, align 4

ST_28: stg_885 [1/1] 3.03ns
left_rotate.exit.2:4  store i32 %tmp_32, i32* @d_V, align 4

ST_28: stg_886 [1/1] 3.03ns
left_rotate.exit.2:5  store i32 %tmp_68_1, i32* @c_V, align 4

ST_28: tmp_60_2 [1/1] 0.00ns
left_rotate.exit.2:7  %tmp_60_2 = zext i8 %i_V_1_1 to i64

ST_28: k_V_addr_2 [1/1] 0.00ns
left_rotate.exit.2:8  %k_V_addr_2 = getelementptr [64 x i32]* @k_V, i64 0, i64 %tmp_60_2

ST_28: k_V_load_2 [2/2] 2.39ns
left_rotate.exit.2:9  %k_V_load_2 = load i32* %k_V_addr_2, align 4

ST_28: tmp_61_2 [1/1] 0.00ns
left_rotate.exit.2:10  %tmp_61_2 = zext i4 %storemerge2_2 to i64

ST_28: w_V_addr_2 [1/1] 0.00ns
left_rotate.exit.2:11  %w_V_addr_2 = getelementptr [16 x i32]* @w_V, i64 0, i64 %tmp_61_2

ST_28: w_V_load_2 [2/2] 2.39ns
left_rotate.exit.2:12  %w_V_load_2 = load i32* %w_V_addr_2, align 4

ST_28: r_V_addr_2 [1/1] 0.00ns
left_rotate.exit.2:16  %r_V_addr_2 = getelementptr [64 x i5]* @r_V, i64 0, i64 %tmp_60_2

ST_28: r_V_load_2 [2/2] 2.39ns
left_rotate.exit.2:17  %r_V_load_2 = load i5* %r_V_addr_2, align 1

ST_28: stg_895 [1/1] 3.03ns
left_rotate.exit.2:26  store i32 %b_V_load_5, i32* @a_V, align 4

ST_28: i_V_1_2 [1/1] 3.50ns
left_rotate.exit.2:27  %i_V_1_2 = add i8 %t_V_7, 3


 <State 29>: 10.83ns
ST_29: f_V_load_2 [1/1] 0.00ns
left_rotate.exit.2:6  %f_V_load_2 = load i32* @f_V, align 4

ST_29: k_V_load_2 [1/2] 2.39ns
left_rotate.exit.2:9  %k_V_load_2 = load i32* %k_V_addr_2, align 4

ST_29: w_V_load_2 [1/2] 2.39ns
left_rotate.exit.2:12  %w_V_load_2 = load i32* %w_V_addr_2, align 4

ST_29: tmp11 [1/1] 4.22ns
left_rotate.exit.2:13  %tmp11 = add i32 %f_V_load_2, %k_V_load_2

ST_29: tmp12 [1/1] 4.22ns
left_rotate.exit.2:14  %tmp12 = add i32 %c_V_load_5, %w_V_load_2

ST_29: tmp_64_2 [1/1] 4.22ns
left_rotate.exit.2:15  %tmp_64_2 = add i32 %tmp12, %tmp11

ST_29: r_V_load_2 [1/2] 2.39ns
left_rotate.exit.2:17  %r_V_load_2 = load i5* %r_V_addr_2, align 1

ST_29: r_V_32_2 [1/1] 3.50ns
left_rotate.exit.2:20  %r_V_32_2 = sub i5 0, %r_V_load_2


 <State 30>: 16.52ns
ST_30: tmp_65_2 [1/1] 0.00ns
left_rotate.exit.2:18  %tmp_65_2 = zext i5 %r_V_load_2 to i32

ST_30: r_V_31_2 [1/1] 7.28ns
left_rotate.exit.2:19  %r_V_31_2 = shl i32 %tmp_64_2, %tmp_65_2

ST_30: tmp_121_cast [1/1] 0.00ns
left_rotate.exit.2:21  %tmp_121_cast = zext i5 %r_V_32_2 to i32

ST_30: r_V_33_2 [1/1] 7.28ns
left_rotate.exit.2:22  %r_V_33_2 = lshr i32 %tmp_64_2, %tmp_121_cast

ST_30: r_V_21_2 [1/1] 2.00ns
left_rotate.exit.2:23  %r_V_21_2 = or i32 %r_V_33_2, %r_V_31_2

ST_30: tmp_68_2 [1/1] 4.22ns
left_rotate.exit.2:24  %tmp_68_2 = add i32 %tmp_68_1, %r_V_21_2

ST_30: stg_911 [1/1] 3.03ns
left_rotate.exit.2:25  store i32 %tmp_68_2, i32* @b_V, align 4

ST_30: stg_912 [1/1] 0.00ns
left_rotate.exit.2:28  br label %15


 <State 31>: 6.88ns
ST_31: b_V_load [1/1] 0.00ns
:3  %b_V_load = load i32* @b_V, align 4

ST_31: tmp_34 [1/1] 4.22ns
:4  %tmp_34 = add i32 %b_V_load, %h1_V_load

ST_31: stg_915 [1/1] 2.66ns
:5  store i32 %tmp_34, i32* @h1_V, align 4

ST_31: empty_15 [1/1] 0.00ns
:12  %empty_15 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str25, i32 %tmp_18)

ST_31: stg_917 [1/1] 0.00ns
:14  br label %13


 <State 32>: 0.00ns
ST_32: tmp_45 [1/1] 0.00ns
:7  %tmp_45 = trunc i32 %lhs_V_2 to i8

ST_32: p_4 [1/1] 0.00ns
:8  %p_4 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %lhs_V_2, i32 24, i32 31)

ST_32: p_5 [1/1] 0.00ns
:9  %p_5 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %lhs_V_2, i32 8, i32 15)

ST_32: p_6 [1/1] 0.00ns
:10  %p_6 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %lhs_V_2, i32 16, i32 23)

ST_32: tmp_V_1 [1/1] 0.00ns
:11  %tmp_V_1 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %tmp_45, i8 %p_5, i8 %p_6, i8 %p_4)

ST_32: stg_923 [1/1] 0.00ns
:12  call void @_ssdm_op_Write.ap_fifo.volatile.i32P(i32* %output_V_V, i32 %tmp_V_1)


 <State 33>: 0.00ns
ST_33: tmp_46 [1/1] 0.00ns
:13  %tmp_46 = trunc i32 %lhs_V_3 to i8

ST_33: p_8 [1/1] 0.00ns
:14  %p_8 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %lhs_V_3, i32 24, i32 31)

ST_33: p_9 [1/1] 0.00ns
:15  %p_9 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %lhs_V_3, i32 8, i32 15)

ST_33: p_s [1/1] 0.00ns
:16  %p_s = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %lhs_V_3, i32 16, i32 23)

ST_33: tmp_V_2 [1/1] 0.00ns
:17  %tmp_V_2 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %tmp_46, i8 %p_9, i8 %p_s, i8 %p_8)

ST_33: stg_929 [1/1] 0.00ns
:18  call void @_ssdm_op_Write.ap_fifo.volatile.i32P(i32* %output_V_V, i32 %tmp_V_2)


 <State 34>: 0.00ns
ST_34: tmp_47 [1/1] 0.00ns
:19  %tmp_47 = trunc i32 %lhs_V_4 to i8

ST_34: p_7 [1/1] 0.00ns
:20  %p_7 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %lhs_V_4, i32 24, i32 31)

ST_34: p_10 [1/1] 0.00ns
:21  %p_10 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %lhs_V_4, i32 8, i32 15)

ST_34: p_11 [1/1] 0.00ns
:22  %p_11 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %lhs_V_4, i32 16, i32 23)

ST_34: tmp_V_3 [1/1] 0.00ns
:23  %tmp_V_3 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %tmp_47, i8 %p_10, i8 %p_11, i8 %p_7)

ST_34: stg_935 [1/1] 0.00ns
:24  call void @_ssdm_op_Write.ap_fifo.volatile.i32P(i32* %output_V_V, i32 %tmp_V_3)

ST_34: stg_936 [1/1] 0.00ns
:25  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
