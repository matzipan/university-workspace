// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="toplevel,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc3s500efg320-4,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.749600,HLS_SYN_LAT=57,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2336,HLS_SYN_LUT=2293}" *)

module toplevel (
        ap_clk,
        ap_rst,
        input_V_V_dout,
        input_V_V_empty_n,
        input_V_V_read,
        output_V_V_din,
        output_V_V_full_n,
        output_V_V_write
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 4'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 4'b10;
parameter    ap_ST_pp0_stg1_fsm_2 = 4'b100;
parameter    ap_ST_st40_fsm_3 = 4'b1000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input  [31:0] input_V_V_dout;
input   input_V_V_empty_n;
output   input_V_V_read;
output  [31:0] output_V_V_din;
input   output_V_V_full_n;
output   output_V_V_write;

reg input_V_V_read;
reg output_V_V_write;
reg   [3:0] i_reg_63;
wire   [0:0] exitcond_fu_74_p2;
reg   [0:0] exitcond_reg_92;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm = 4'b1;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_bdd_29;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_sig_bdd_38;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg    ap_reg_ppiten_pp0_it5 = 1'b0;
reg    ap_reg_ppiten_pp0_it6 = 1'b0;
reg    ap_reg_ppiten_pp0_it7 = 1'b0;
reg    ap_reg_ppiten_pp0_it8 = 1'b0;
reg    ap_reg_ppiten_pp0_it9 = 1'b0;
reg    ap_reg_ppiten_pp0_it10 = 1'b0;
reg    ap_reg_ppiten_pp0_it11 = 1'b0;
reg    ap_reg_ppiten_pp0_it12 = 1'b0;
reg    ap_reg_ppiten_pp0_it13 = 1'b0;
reg    ap_reg_ppiten_pp0_it14 = 1'b0;
reg    ap_reg_ppiten_pp0_it15 = 1'b0;
reg    ap_reg_ppiten_pp0_it16 = 1'b0;
reg    ap_reg_ppiten_pp0_it17 = 1'b0;
reg    ap_reg_ppiten_pp0_it18 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond_reg_92_pp0_it1;
reg   [0:0] ap_reg_ppstg_exitcond_reg_92_pp0_it2;
reg   [0:0] ap_reg_ppstg_exitcond_reg_92_pp0_it3;
reg   [0:0] ap_reg_ppstg_exitcond_reg_92_pp0_it4;
reg   [0:0] ap_reg_ppstg_exitcond_reg_92_pp0_it5;
reg   [0:0] ap_reg_ppstg_exitcond_reg_92_pp0_it6;
reg   [0:0] ap_reg_ppstg_exitcond_reg_92_pp0_it7;
reg   [0:0] ap_reg_ppstg_exitcond_reg_92_pp0_it8;
reg   [0:0] ap_reg_ppstg_exitcond_reg_92_pp0_it9;
reg   [0:0] ap_reg_ppstg_exitcond_reg_92_pp0_it10;
reg   [0:0] ap_reg_ppstg_exitcond_reg_92_pp0_it11;
reg   [0:0] ap_reg_ppstg_exitcond_reg_92_pp0_it12;
reg   [0:0] ap_reg_ppstg_exitcond_reg_92_pp0_it13;
reg   [0:0] ap_reg_ppstg_exitcond_reg_92_pp0_it14;
reg   [0:0] ap_reg_ppstg_exitcond_reg_92_pp0_it15;
reg   [0:0] ap_reg_ppstg_exitcond_reg_92_pp0_it16;
reg   [0:0] ap_reg_ppstg_exitcond_reg_92_pp0_it17;
reg   [0:0] ap_reg_ppstg_exitcond_reg_92_pp0_it18;
wire   [3:0] i_1_fu_80_p2;
reg   [3:0] i_1_reg_96;
reg   [31:0] tmp_V_reg_101;
reg    ap_sig_cseq_ST_pp0_stg1_fsm_2;
reg    ap_sig_bdd_108;
reg    ap_sig_bdd_115;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_167;
reg   [3:0] i_phi_fu_67_p4;
wire   [31:0] grp_fu_86_p2;
reg    grp_fu_86_ce;
reg   [3:0] ap_NS_fsm;


toplevel_udiv_32ns_32ns_32_36 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
toplevel_udiv_32ns_32ns_32_36_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( tmp_V_reg_101 ),
    .din1( input_V_V_dout ),
    .ce( grp_fu_86_ce ),
    .dout( grp_fu_86_p2 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_38 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(exitcond_fu_74_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((exitcond_reg_92 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115)) & ~(exitcond_reg_92 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it10
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115)))) begin
            ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it11
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115)))) begin
            ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it12
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115)))) begin
            ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it13
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115)))) begin
            ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it14
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115)))) begin
            ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it15
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115)))) begin
            ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it16
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115)))) begin
            ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it17
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115)))) begin
            ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it18
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115)))) begin
            ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
            ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115)))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115)))) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115)))) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115)))) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it6
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115)))) begin
            ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it7
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115)))) begin
            ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it8
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115)))) begin
            ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it9
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115)))) begin
            ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_reg_92 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_38 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        i_reg_63 <= i_1_reg_96;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        i_reg_63 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_38 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond_reg_92_pp0_it1 <= exitcond_reg_92;
        ap_reg_ppstg_exitcond_reg_92_pp0_it10 <= ap_reg_ppstg_exitcond_reg_92_pp0_it9;
        ap_reg_ppstg_exitcond_reg_92_pp0_it11 <= ap_reg_ppstg_exitcond_reg_92_pp0_it10;
        ap_reg_ppstg_exitcond_reg_92_pp0_it12 <= ap_reg_ppstg_exitcond_reg_92_pp0_it11;
        ap_reg_ppstg_exitcond_reg_92_pp0_it13 <= ap_reg_ppstg_exitcond_reg_92_pp0_it12;
        ap_reg_ppstg_exitcond_reg_92_pp0_it14 <= ap_reg_ppstg_exitcond_reg_92_pp0_it13;
        ap_reg_ppstg_exitcond_reg_92_pp0_it15 <= ap_reg_ppstg_exitcond_reg_92_pp0_it14;
        ap_reg_ppstg_exitcond_reg_92_pp0_it16 <= ap_reg_ppstg_exitcond_reg_92_pp0_it15;
        ap_reg_ppstg_exitcond_reg_92_pp0_it17 <= ap_reg_ppstg_exitcond_reg_92_pp0_it16;
        ap_reg_ppstg_exitcond_reg_92_pp0_it18 <= ap_reg_ppstg_exitcond_reg_92_pp0_it17;
        ap_reg_ppstg_exitcond_reg_92_pp0_it2 <= ap_reg_ppstg_exitcond_reg_92_pp0_it1;
        ap_reg_ppstg_exitcond_reg_92_pp0_it3 <= ap_reg_ppstg_exitcond_reg_92_pp0_it2;
        ap_reg_ppstg_exitcond_reg_92_pp0_it4 <= ap_reg_ppstg_exitcond_reg_92_pp0_it3;
        ap_reg_ppstg_exitcond_reg_92_pp0_it5 <= ap_reg_ppstg_exitcond_reg_92_pp0_it4;
        ap_reg_ppstg_exitcond_reg_92_pp0_it6 <= ap_reg_ppstg_exitcond_reg_92_pp0_it5;
        ap_reg_ppstg_exitcond_reg_92_pp0_it7 <= ap_reg_ppstg_exitcond_reg_92_pp0_it6;
        ap_reg_ppstg_exitcond_reg_92_pp0_it8 <= ap_reg_ppstg_exitcond_reg_92_pp0_it7;
        ap_reg_ppstg_exitcond_reg_92_pp0_it9 <= ap_reg_ppstg_exitcond_reg_92_pp0_it8;
        exitcond_reg_92 <= exitcond_fu_74_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_38 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        i_1_reg_96 <= i_1_fu_80_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_reg_92 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115)))) begin
        tmp_V_reg_101 <= input_V_V_dout;
    end
end

always @ (ap_sig_bdd_29) begin
    if (ap_sig_bdd_29) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_108) begin
    if (ap_sig_bdd_108) begin
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_167) begin
    if (ap_sig_bdd_167) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_38 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it18 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_bdd_115) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_38 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115))))) begin
        grp_fu_86_ce = ap_const_logic_1;
    end else begin
        grp_fu_86_ce = ap_const_logic_0;
    end
end

always @ (i_reg_63 or exitcond_reg_92 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1 or i_1_reg_96) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_reg_92 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        i_phi_fu_67_p4 = i_1_reg_96;
    end else begin
        i_phi_fu_67_p4 = i_reg_63;
    end
end

always @ (exitcond_reg_92 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_38 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it18 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_bdd_115) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_reg_92 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_reg_92 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_38 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
        input_V_V_read = ap_const_logic_1;
    end else begin
        input_V_V_read = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it0 or ap_sig_bdd_38 or ap_reg_ppiten_pp0_it18 or ap_reg_ppstg_exitcond_reg_92_pp0_it18 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_bdd_115) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_92_pp0_it18) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115)))) begin
        output_V_V_write = ap_const_logic_1;
    end else begin
        output_V_V_write = ap_const_logic_0;
    end
end
always @ (exitcond_fu_74_p2 or ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_38 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it17 or ap_reg_ppiten_pp0_it18 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_bdd_115) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
        end
        ap_ST_pp0_stg0_fsm_1 : 
        begin
            if ((~(ap_sig_bdd_38 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_38 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(exitcond_fu_74_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_38 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(exitcond_fu_74_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st40_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end
        end
        ap_ST_pp0_stg1_fsm_2 : 
        begin
            if ((~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it17)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_38) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it18) & ap_sig_bdd_115)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it17))) begin
                ap_NS_fsm = ap_ST_st40_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            end
        end
        ap_ST_st40_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end



always @ (ap_CS_fsm) begin
    ap_sig_bdd_108 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (output_V_V_full_n or ap_reg_ppstg_exitcond_reg_92_pp0_it18) begin
    ap_sig_bdd_115 = ((output_V_V_full_n == ap_const_logic_0) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_92_pp0_it18));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_167 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_0]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_29 = (ap_CS_fsm[ap_const_lv32_1] == ap_const_lv1_1);
end


always @ (input_V_V_empty_n or exitcond_reg_92) begin
    ap_sig_bdd_38 = ((input_V_V_empty_n == ap_const_logic_0) & (exitcond_reg_92 == ap_const_lv1_0));
end

assign exitcond_fu_74_p2 = (i_phi_fu_67_p4 == ap_const_lv4_A? 1'b1: 1'b0);

assign i_1_fu_80_p2 = (i_phi_fu_67_p4 + ap_const_lv4_1);

assign output_V_V_din = grp_fu_86_p2;


endmodule //toplevel

