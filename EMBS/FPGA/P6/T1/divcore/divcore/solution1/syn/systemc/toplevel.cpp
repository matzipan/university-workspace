// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "toplevel.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic toplevel::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic toplevel::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> toplevel::ap_ST_st1_fsm_0 = "1";
const sc_lv<4> toplevel::ap_ST_pp0_stg0_fsm_1 = "10";
const sc_lv<4> toplevel::ap_ST_pp0_stg1_fsm_2 = "100";
const sc_lv<4> toplevel::ap_ST_st40_fsm_3 = "1000";
const sc_lv<32> toplevel::ap_const_lv32_1 = "1";
const sc_lv<1> toplevel::ap_const_lv1_1 = "1";
const sc_lv<1> toplevel::ap_const_lv1_0 = "0";
const sc_lv<32> toplevel::ap_const_lv32_2 = "10";
const sc_lv<32> toplevel::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<4> toplevel::ap_const_lv4_0 = "0000";
const sc_lv<4> toplevel::ap_const_lv4_A = "1010";
const sc_lv<4> toplevel::ap_const_lv4_1 = "1";

toplevel::toplevel(sc_module_name name) : sc_module(name), mVcdFile(0) {
    toplevel_udiv_32ns_32ns_32_36_U1 = new toplevel_udiv_32ns_32ns_32_36<1,36,32,32,32>("toplevel_udiv_32ns_32ns_32_36_U1");
    toplevel_udiv_32ns_32ns_32_36_U1->clk(ap_clk);
    toplevel_udiv_32ns_32ns_32_36_U1->reset(ap_rst);
    toplevel_udiv_32ns_32ns_32_36_U1->din0(tmp_V_reg_101);
    toplevel_udiv_32ns_32ns_32_36_U1->din1(input_V_V_dout);
    toplevel_udiv_32ns_32ns_32_36_U1->ce(grp_fu_86_ce);
    toplevel_udiv_32ns_32ns_32_36_U1->dout(grp_fu_86_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_sig_bdd_108);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_115);
    sensitive << ( output_V_V_full_n );
    sensitive << ( ap_reg_ppstg_exitcond_reg_92_pp0_it18 );

    SC_METHOD(thread_ap_sig_bdd_167);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_38);
    sensitive << ( input_V_V_empty_n );
    sensitive << ( exitcond_reg_92 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_1);
    sensitive << ( ap_sig_bdd_29 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg1_fsm_2);
    sensitive << ( ap_sig_bdd_108 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_167 );

    SC_METHOD(thread_exitcond_fu_74_p2);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_38 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( i_phi_fu_67_p4 );

    SC_METHOD(thread_grp_fu_86_ce);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_38 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it18 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_bdd_115 );

    SC_METHOD(thread_i_1_fu_80_p2);
    sensitive << ( i_phi_fu_67_p4 );

    SC_METHOD(thread_i_phi_fu_67_p4);
    sensitive << ( i_reg_63 );
    sensitive << ( exitcond_reg_92 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( i_1_reg_96 );

    SC_METHOD(thread_input_V_V_read);
    sensitive << ( exitcond_reg_92 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_38 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it18 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_bdd_115 );

    SC_METHOD(thread_output_V_V_din);
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_38 );
    sensitive << ( ap_reg_ppiten_pp0_it18 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_92_pp0_it18 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_bdd_115 );
    sensitive << ( grp_fu_86_p2 );

    SC_METHOD(thread_output_V_V_write);
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_38 );
    sensitive << ( ap_reg_ppiten_pp0_it18 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_92_pp0_it18 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_bdd_115 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( exitcond_fu_74_p2 );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_38 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it17 );
    sensitive << ( ap_reg_ppiten_pp0_it18 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_bdd_115 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0001";
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it2 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it3 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it4 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it5 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it6 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it7 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it8 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it9 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it10 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it11 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it12 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it13 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it14 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it15 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it16 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it17 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it18 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "toplevel_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, input_V_V_dout, "(port)input_V_V_dout");
    sc_trace(mVcdFile, input_V_V_empty_n, "(port)input_V_V_empty_n");
    sc_trace(mVcdFile, input_V_V_read, "(port)input_V_V_read");
    sc_trace(mVcdFile, output_V_V_din, "(port)output_V_V_din");
    sc_trace(mVcdFile, output_V_V_full_n, "(port)output_V_V_full_n");
    sc_trace(mVcdFile, output_V_V_write, "(port)output_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, i_reg_63, "i_reg_63");
    sc_trace(mVcdFile, exitcond_fu_74_p2, "exitcond_fu_74_p2");
    sc_trace(mVcdFile, exitcond_reg_92, "exitcond_reg_92");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_1, "ap_sig_cseq_ST_pp0_stg0_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_29, "ap_sig_bdd_29");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_sig_bdd_38, "ap_sig_bdd_38");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it2, "ap_reg_ppiten_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it3, "ap_reg_ppiten_pp0_it3");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it4, "ap_reg_ppiten_pp0_it4");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it5, "ap_reg_ppiten_pp0_it5");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it6, "ap_reg_ppiten_pp0_it6");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it7, "ap_reg_ppiten_pp0_it7");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it8, "ap_reg_ppiten_pp0_it8");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it9, "ap_reg_ppiten_pp0_it9");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it10, "ap_reg_ppiten_pp0_it10");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it11, "ap_reg_ppiten_pp0_it11");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it12, "ap_reg_ppiten_pp0_it12");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it13, "ap_reg_ppiten_pp0_it13");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it14, "ap_reg_ppiten_pp0_it14");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it15, "ap_reg_ppiten_pp0_it15");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it16, "ap_reg_ppiten_pp0_it16");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it17, "ap_reg_ppiten_pp0_it17");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it18, "ap_reg_ppiten_pp0_it18");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_92_pp0_it1, "ap_reg_ppstg_exitcond_reg_92_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_92_pp0_it2, "ap_reg_ppstg_exitcond_reg_92_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_92_pp0_it3, "ap_reg_ppstg_exitcond_reg_92_pp0_it3");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_92_pp0_it4, "ap_reg_ppstg_exitcond_reg_92_pp0_it4");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_92_pp0_it5, "ap_reg_ppstg_exitcond_reg_92_pp0_it5");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_92_pp0_it6, "ap_reg_ppstg_exitcond_reg_92_pp0_it6");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_92_pp0_it7, "ap_reg_ppstg_exitcond_reg_92_pp0_it7");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_92_pp0_it8, "ap_reg_ppstg_exitcond_reg_92_pp0_it8");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_92_pp0_it9, "ap_reg_ppstg_exitcond_reg_92_pp0_it9");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_92_pp0_it10, "ap_reg_ppstg_exitcond_reg_92_pp0_it10");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_92_pp0_it11, "ap_reg_ppstg_exitcond_reg_92_pp0_it11");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_92_pp0_it12, "ap_reg_ppstg_exitcond_reg_92_pp0_it12");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_92_pp0_it13, "ap_reg_ppstg_exitcond_reg_92_pp0_it13");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_92_pp0_it14, "ap_reg_ppstg_exitcond_reg_92_pp0_it14");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_92_pp0_it15, "ap_reg_ppstg_exitcond_reg_92_pp0_it15");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_92_pp0_it16, "ap_reg_ppstg_exitcond_reg_92_pp0_it16");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_92_pp0_it17, "ap_reg_ppstg_exitcond_reg_92_pp0_it17");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_92_pp0_it18, "ap_reg_ppstg_exitcond_reg_92_pp0_it18");
    sc_trace(mVcdFile, i_1_fu_80_p2, "i_1_fu_80_p2");
    sc_trace(mVcdFile, i_1_reg_96, "i_1_reg_96");
    sc_trace(mVcdFile, tmp_V_reg_101, "tmp_V_reg_101");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg1_fsm_2, "ap_sig_cseq_ST_pp0_stg1_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_108, "ap_sig_bdd_108");
    sc_trace(mVcdFile, ap_sig_bdd_115, "ap_sig_bdd_115");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_167, "ap_sig_bdd_167");
    sc_trace(mVcdFile, i_phi_fu_67_p4, "i_phi_fu_67_p4");
    sc_trace(mVcdFile, grp_fu_86_p2, "grp_fu_86_p2");
    sc_trace(mVcdFile, grp_fu_86_ce, "grp_fu_86_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("toplevel.hdltvin.dat");
    mHdltvoutHandle.open("toplevel.hdltvout.dat");
}

toplevel::~toplevel() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete toplevel_udiv_32ns_32ns_32_36_U1;
}

void toplevel::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
             !(ap_sig_bdd_38.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && 
             !esl_seteq<1,1,1>(exitcond_fu_74_p2.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(exitcond_reg_92.read(), ap_const_lv1_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read())))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
                     !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read())) && 
                     !esl_seteq<1,1,1>(exitcond_reg_92.read(), ap_const_lv1_0)))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it10 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read())))) {
            ap_reg_ppiten_pp0_it10 = ap_reg_ppiten_pp0_it9.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it11 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read())))) {
            ap_reg_ppiten_pp0_it11 = ap_reg_ppiten_pp0_it10.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it12 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read())))) {
            ap_reg_ppiten_pp0_it12 = ap_reg_ppiten_pp0_it11.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it13 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read())))) {
            ap_reg_ppiten_pp0_it13 = ap_reg_ppiten_pp0_it12.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it14 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read())))) {
            ap_reg_ppiten_pp0_it14 = ap_reg_ppiten_pp0_it13.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it15 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read())))) {
            ap_reg_ppiten_pp0_it15 = ap_reg_ppiten_pp0_it14.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it16 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read())))) {
            ap_reg_ppiten_pp0_it16 = ap_reg_ppiten_pp0_it15.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it17 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read())))) {
            ap_reg_ppiten_pp0_it17 = ap_reg_ppiten_pp0_it16.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it18 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read())))) {
            ap_reg_ppiten_pp0_it18 = ap_reg_ppiten_pp0_it17.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
            ap_reg_ppiten_pp0_it18 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read())))) {
            ap_reg_ppiten_pp0_it2 = ap_reg_ppiten_pp0_it1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it3 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read())))) {
            ap_reg_ppiten_pp0_it3 = ap_reg_ppiten_pp0_it2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it4 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read())))) {
            ap_reg_ppiten_pp0_it4 = ap_reg_ppiten_pp0_it3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it5 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read())))) {
            ap_reg_ppiten_pp0_it5 = ap_reg_ppiten_pp0_it4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it6 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read())))) {
            ap_reg_ppiten_pp0_it6 = ap_reg_ppiten_pp0_it5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it7 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read())))) {
            ap_reg_ppiten_pp0_it7 = ap_reg_ppiten_pp0_it6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it8 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read())))) {
            ap_reg_ppiten_pp0_it8 = ap_reg_ppiten_pp0_it7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it9 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read())))) {
            ap_reg_ppiten_pp0_it9 = ap_reg_ppiten_pp0_it8.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_92.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !(ap_sig_bdd_38.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        i_reg_63 = i_1_reg_96.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
        i_reg_63 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && !(ap_sig_bdd_38.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        ap_reg_ppstg_exitcond_reg_92_pp0_it1 = exitcond_reg_92.read();
        ap_reg_ppstg_exitcond_reg_92_pp0_it10 = ap_reg_ppstg_exitcond_reg_92_pp0_it9.read();
        ap_reg_ppstg_exitcond_reg_92_pp0_it11 = ap_reg_ppstg_exitcond_reg_92_pp0_it10.read();
        ap_reg_ppstg_exitcond_reg_92_pp0_it12 = ap_reg_ppstg_exitcond_reg_92_pp0_it11.read();
        ap_reg_ppstg_exitcond_reg_92_pp0_it13 = ap_reg_ppstg_exitcond_reg_92_pp0_it12.read();
        ap_reg_ppstg_exitcond_reg_92_pp0_it14 = ap_reg_ppstg_exitcond_reg_92_pp0_it13.read();
        ap_reg_ppstg_exitcond_reg_92_pp0_it15 = ap_reg_ppstg_exitcond_reg_92_pp0_it14.read();
        ap_reg_ppstg_exitcond_reg_92_pp0_it16 = ap_reg_ppstg_exitcond_reg_92_pp0_it15.read();
        ap_reg_ppstg_exitcond_reg_92_pp0_it17 = ap_reg_ppstg_exitcond_reg_92_pp0_it16.read();
        ap_reg_ppstg_exitcond_reg_92_pp0_it18 = ap_reg_ppstg_exitcond_reg_92_pp0_it17.read();
        ap_reg_ppstg_exitcond_reg_92_pp0_it2 = ap_reg_ppstg_exitcond_reg_92_pp0_it1.read();
        ap_reg_ppstg_exitcond_reg_92_pp0_it3 = ap_reg_ppstg_exitcond_reg_92_pp0_it2.read();
        ap_reg_ppstg_exitcond_reg_92_pp0_it4 = ap_reg_ppstg_exitcond_reg_92_pp0_it3.read();
        ap_reg_ppstg_exitcond_reg_92_pp0_it5 = ap_reg_ppstg_exitcond_reg_92_pp0_it4.read();
        ap_reg_ppstg_exitcond_reg_92_pp0_it6 = ap_reg_ppstg_exitcond_reg_92_pp0_it5.read();
        ap_reg_ppstg_exitcond_reg_92_pp0_it7 = ap_reg_ppstg_exitcond_reg_92_pp0_it6.read();
        ap_reg_ppstg_exitcond_reg_92_pp0_it8 = ap_reg_ppstg_exitcond_reg_92_pp0_it7.read();
        ap_reg_ppstg_exitcond_reg_92_pp0_it9 = ap_reg_ppstg_exitcond_reg_92_pp0_it8.read();
        exitcond_reg_92 = exitcond_fu_74_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(ap_sig_bdd_38.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        i_1_reg_96 = i_1_fu_80_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(exitcond_reg_92.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read())))) {
        tmp_V_reg_101 = input_V_V_dout.read();
    }
}

void toplevel::thread_ap_sig_bdd_108() {
    ap_sig_bdd_108 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void toplevel::thread_ap_sig_bdd_115() {
    ap_sig_bdd_115 = (esl_seteq<1,1,1>(output_V_V_full_n.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_92_pp0_it18.read()));
}

void toplevel::thread_ap_sig_bdd_167() {
    ap_sig_bdd_167 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(0, 0));
}

void toplevel::thread_ap_sig_bdd_29() {
    ap_sig_bdd_29 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(1, 1), ap_const_lv1_1);
}

void toplevel::thread_ap_sig_bdd_38() {
    ap_sig_bdd_38 = (esl_seteq<1,1,1>(input_V_V_empty_n.read(), ap_const_logic_0) && esl_seteq<1,1,1>(exitcond_reg_92.read(), ap_const_lv1_0));
}

void toplevel::thread_ap_sig_cseq_ST_pp0_stg0_fsm_1() {
    if (ap_sig_bdd_29.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    }
}

void toplevel::thread_ap_sig_cseq_ST_pp0_stg1_fsm_2() {
    if (ap_sig_bdd_108.read()) {
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_0;
    }
}

void toplevel::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_167.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void toplevel::thread_exitcond_fu_74_p2() {
    exitcond_fu_74_p2 = (!i_phi_fu_67_p4.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i_phi_fu_67_p4.read() == ap_const_lv4_A);
}

void toplevel::thread_grp_fu_86_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          !(ap_sig_bdd_38.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read()))))) {
        grp_fu_86_ce = ap_const_logic_1;
    } else {
        grp_fu_86_ce = ap_const_logic_0;
    }
}

void toplevel::thread_i_1_fu_80_p2() {
    i_1_fu_80_p2 = (!i_phi_fu_67_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_phi_fu_67_p4.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void toplevel::thread_i_phi_fu_67_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_92.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
        i_phi_fu_67_p4 = i_1_reg_96.read();
    } else {
        i_phi_fu_67_p4 = i_reg_63.read();
    }
}

void toplevel::thread_input_V_V_read() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_reg_92.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(exitcond_reg_92.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
          !(ap_sig_bdd_38.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))))) {
        input_V_V_read = ap_const_logic_1;
    } else {
        input_V_V_read = ap_const_logic_0;
    }
}

void toplevel::thread_output_V_V_din() {
    output_V_V_din = grp_fu_86_p2.read();
}

void toplevel::thread_output_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_92_pp0_it18.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read())))) {
        output_V_V_write = ap_const_logic_1;
    } else {
        output_V_V_write = ap_const_logic_0;
    }
}

void toplevel::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            break;
        case 2 : 
            if ((!(ap_sig_bdd_38.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(ap_sig_bdd_38.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && !esl_seteq<1,1,1>(exitcond_fu_74_p2.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(ap_sig_bdd_38.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && !esl_seteq<1,1,1>(exitcond_fu_74_p2.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
                ap_NS_fsm = ap_ST_st40_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            }
            break;
        case 4 : 
            if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read())) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it17.read())))) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_bdd_38.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it18.read()) && 
  ap_sig_bdd_115.read())) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it17.read()))) {
                ap_NS_fsm = ap_ST_st40_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

void toplevel::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_V_V_dout\" :  \"" << input_V_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_V_V_empty_n\" :  \"" << input_V_V_empty_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"input_V_V_read\" :  \"" << input_V_V_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_V_din\" :  \"" << output_V_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_V_V_full_n\" :  \"" << output_V_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_V_write\" :  \"" << output_V_V_write.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

