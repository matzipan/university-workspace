// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _toplevel_HH_
#define _toplevel_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "toplevel_udiv_32ns_32ns_32_36.h"

namespace ap_rtl {

struct toplevel : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<32> > input_V_V_dout;
    sc_in< sc_logic > input_V_V_empty_n;
    sc_out< sc_logic > input_V_V_read;
    sc_out< sc_lv<32> > output_V_V_din;
    sc_in< sc_logic > output_V_V_full_n;
    sc_out< sc_logic > output_V_V_write;


    // Module declarations
    toplevel(sc_module_name name);
    SC_HAS_PROCESS(toplevel);

    ~toplevel();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    toplevel_udiv_32ns_32ns_32_36<1,36,32,32,32>* toplevel_udiv_32ns_32ns_32_36_U1;
    sc_signal< sc_lv<4> > i_reg_63;
    sc_signal< sc_lv<1> > exitcond_fu_74_p2;
    sc_signal< sc_lv<1> > exitcond_reg_92;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_1;
    sc_signal< bool > ap_sig_bdd_29;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< bool > ap_sig_bdd_38;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it3;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it4;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it5;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it6;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it7;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it8;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it9;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it10;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it11;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it12;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it13;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it14;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it15;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it16;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it17;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it18;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_92_pp0_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_92_pp0_it2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_92_pp0_it3;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_92_pp0_it4;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_92_pp0_it5;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_92_pp0_it6;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_92_pp0_it7;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_92_pp0_it8;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_92_pp0_it9;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_92_pp0_it10;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_92_pp0_it11;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_92_pp0_it12;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_92_pp0_it13;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_92_pp0_it14;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_92_pp0_it15;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_92_pp0_it16;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_92_pp0_it17;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_92_pp0_it18;
    sc_signal< sc_lv<4> > i_1_fu_80_p2;
    sc_signal< sc_lv<4> > i_1_reg_96;
    sc_signal< sc_lv<32> > tmp_V_reg_101;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg1_fsm_2;
    sc_signal< bool > ap_sig_bdd_108;
    sc_signal< bool > ap_sig_bdd_115;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_167;
    sc_signal< sc_lv<4> > i_phi_fu_67_p4;
    sc_signal< sc_lv<32> > grp_fu_86_p2;
    sc_signal< sc_logic > grp_fu_86_ce;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_st1_fsm_0;
    static const sc_lv<4> ap_ST_pp0_stg0_fsm_1;
    static const sc_lv<4> ap_ST_pp0_stg1_fsm_2;
    static const sc_lv<4> ap_ST_st40_fsm_3;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_sig_bdd_108();
    void thread_ap_sig_bdd_115();
    void thread_ap_sig_bdd_167();
    void thread_ap_sig_bdd_29();
    void thread_ap_sig_bdd_38();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_1();
    void thread_ap_sig_cseq_ST_pp0_stg1_fsm_2();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_exitcond_fu_74_p2();
    void thread_grp_fu_86_ce();
    void thread_i_1_fu_80_p2();
    void thread_i_phi_fu_67_p4();
    void thread_input_V_V_read();
    void thread_output_V_V_din();
    void thread_output_V_V_write();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
