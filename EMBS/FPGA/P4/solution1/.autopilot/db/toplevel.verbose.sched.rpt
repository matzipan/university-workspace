

================================================================
== Vivado HLS Report for 'toplevel'
================================================================
* Date:           Thu Feb 18 12:02:17 2016

* Version:        2015.4 (Build 1412921 on Wed Nov 18 09:58:55 AM 2015)
* Project:        bla
* Solution:       solution1
* Product family: spartan3e
* Target device:  xc3s1600efg320-4


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  20.00|     16.88|        2.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   41|   41|   42|   42|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 42
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
* FSM state operations: 

 <State 1>: 0.00ns
ST_1: tmp_V_42 [1/1] 0.00ns
.preheader:8  %tmp_V_42 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_1: stg_44 [1/1] 0.00ns
.preheader:9  store i32 %tmp_V_42, i32* @inputdata_V_0, align 16


 <State 2>: 0.00ns
ST_2: tmp_V_1 [1/1] 0.00ns
.preheader:10  %tmp_V_1 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_2: stg_46 [1/1] 0.00ns
.preheader:11  store i32 %tmp_V_1, i32* @inputdata_V_1, align 4


 <State 3>: 0.00ns
ST_3: tmp_V_2 [1/1] 0.00ns
.preheader:12  %tmp_V_2 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_3: stg_48 [1/1] 0.00ns
.preheader:13  store i32 %tmp_V_2, i32* @inputdata_V_2, align 8


 <State 4>: 0.00ns
ST_4: tmp_V_3 [1/1] 0.00ns
.preheader:14  %tmp_V_3 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_4: stg_50 [1/1] 0.00ns
.preheader:15  store i32 %tmp_V_3, i32* @inputdata_V_3, align 4


 <State 5>: 16.88ns
ST_5: tmp_V_4 [1/1] 0.00ns
.preheader:16  %tmp_V_4 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_5: stg_52 [1/1] 0.00ns
.preheader:17  store i32 %tmp_V_4, i32* @inputdata_V_4, align 16

ST_5: tmp3 [1/1] 4.22ns
.preheader:88  %tmp3 = add i32 %tmp_V_42, %tmp_V_1

ST_5: tmp5 [1/1] 4.22ns
.preheader:89  %tmp5 = add i32 %tmp_V_3, %tmp_V_4

ST_5: tmp4 [1/1] 4.22ns
.preheader:90  %tmp4 = add i32 %tmp5, %tmp_V_2

ST_5: tmp2 [1/1] 4.22ns
.preheader:91  %tmp2 = add i32 %tmp4, %tmp3

ST_5: total_V_2 [1/1] 4.22ns
.preheader:128  %total_V_2 = sub i32 %tmp_V_42, %tmp_V_1

ST_5: total_V_2_1 [1/1] 4.22ns
.preheader:129  %total_V_2_1 = sub i32 %total_V_2, %tmp_V_2

ST_5: total_V_2_2 [1/1] 4.22ns
.preheader:130  %total_V_2_2 = sub i32 %total_V_2_1, %tmp_V_3

ST_5: total_V_2_3 [1/1] 4.22ns
.preheader:131  %total_V_2_3 = sub i32 %total_V_2_2, %tmp_V_4


 <State 6>: 0.00ns
ST_6: tmp_V_5 [1/1] 0.00ns
.preheader:18  %tmp_V_5 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_6: stg_62 [1/1] 0.00ns
.preheader:19  store i32 %tmp_V_5, i32* @inputdata_V_5, align 4


 <State 7>: 8.44ns
ST_7: tmp_V_6 [1/1] 0.00ns
.preheader:20  %tmp_V_6 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_7: stg_64 [1/1] 0.00ns
.preheader:21  store i32 %tmp_V_6, i32* @inputdata_V_6, align 8

ST_7: tmp7 [1/1] 4.22ns
.preheader:92  %tmp7 = add i32 %tmp_V_5, %tmp_V_6

ST_7: total_V_2_4 [1/1] 4.22ns
.preheader:132  %total_V_2_4 = sub i32 %total_V_2_3, %tmp_V_5

ST_7: total_V_2_5 [1/1] 4.22ns
.preheader:133  %total_V_2_5 = sub i32 %total_V_2_4, %tmp_V_6


 <State 8>: 0.00ns
ST_8: tmp_V_7 [1/1] 0.00ns
.preheader:22  %tmp_V_7 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_8: stg_69 [1/1] 0.00ns
.preheader:23  store i32 %tmp_V_7, i32* @inputdata_V_7, align 4


 <State 9>: 0.00ns
ST_9: tmp_V_8 [1/1] 0.00ns
.preheader:24  %tmp_V_8 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_9: stg_71 [1/1] 0.00ns
.preheader:25  store i32 %tmp_V_8, i32* @inputdata_V_8, align 16


 <State 10>: 16.88ns
ST_10: tmp_V_9 [1/1] 0.00ns
.preheader:26  %tmp_V_9 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_10: stg_73 [1/1] 0.00ns
.preheader:27  store i32 %tmp_V_9, i32* @inputdata_V_9, align 4

ST_10: tmp9 [1/1] 4.22ns
.preheader:93  %tmp9 = add i32 %tmp_V_8, %tmp_V_9

ST_10: tmp8 [1/1] 4.22ns
.preheader:94  %tmp8 = add i32 %tmp9, %tmp_V_7

ST_10: tmp6 [1/1] 4.22ns
.preheader:95  %tmp6 = add i32 %tmp8, %tmp7

ST_10: tmp1 [1/1] 4.22ns
.preheader:96  %tmp1 = add i32 %tmp6, %tmp2

ST_10: total_V_2_6 [1/1] 4.22ns
.preheader:134  %total_V_2_6 = sub i32 %total_V_2_5, %tmp_V_7

ST_10: total_V_2_7 [1/1] 4.22ns
.preheader:135  %total_V_2_7 = sub i32 %total_V_2_6, %tmp_V_8

ST_10: total_V_2_8 [1/1] 4.22ns
.preheader:136  %total_V_2_8 = sub i32 %total_V_2_7, %tmp_V_9


 <State 11>: 0.00ns
ST_11: tmp_V_10 [1/1] 0.00ns
.preheader:28  %tmp_V_10 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_11: stg_82 [1/1] 0.00ns
.preheader:29  store i32 %tmp_V_10, i32* @inputdata_V_10, align 8


 <State 12>: 8.44ns
ST_12: tmp_V_11 [1/1] 0.00ns
.preheader:30  %tmp_V_11 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_12: stg_84 [1/1] 0.00ns
.preheader:31  store i32 %tmp_V_11, i32* @inputdata_V_11, align 4

ST_12: tmp12 [1/1] 4.22ns
.preheader:97  %tmp12 = add i32 %tmp_V_10, %tmp_V_11

ST_12: total_V_2_9 [1/1] 4.22ns
.preheader:137  %total_V_2_9 = sub i32 %total_V_2_8, %tmp_V_10

ST_12: total_V_2_s [1/1] 4.22ns
.preheader:138  %total_V_2_s = sub i32 %total_V_2_9, %tmp_V_11


 <State 13>: 0.00ns
ST_13: tmp_V_12 [1/1] 0.00ns
.preheader:32  %tmp_V_12 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_13: stg_89 [1/1] 0.00ns
.preheader:33  store i32 %tmp_V_12, i32* @inputdata_V_12, align 16


 <State 14>: 0.00ns
ST_14: tmp_V_13 [1/1] 0.00ns
.preheader:34  %tmp_V_13 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_14: stg_91 [1/1] 0.00ns
.preheader:35  store i32 %tmp_V_13, i32* @inputdata_V_13, align 4


 <State 15>: 12.66ns
ST_15: tmp_V_14 [1/1] 0.00ns
.preheader:36  %tmp_V_14 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_15: stg_93 [1/1] 0.00ns
.preheader:37  store i32 %tmp_V_14, i32* @inputdata_V_14, align 8

ST_15: tmp14 [1/1] 4.22ns
.preheader:98  %tmp14 = add i32 %tmp_V_13, %tmp_V_14

ST_15: tmp13 [1/1] 4.22ns
.preheader:99  %tmp13 = add i32 %tmp14, %tmp_V_12

ST_15: tmp11 [1/1] 4.22ns
.preheader:100  %tmp11 = add i32 %tmp13, %tmp12

ST_15: total_V_2_10 [1/1] 4.22ns
.preheader:139  %total_V_2_10 = sub i32 %total_V_2_s, %tmp_V_12

ST_15: total_V_2_11 [1/1] 4.22ns
.preheader:140  %total_V_2_11 = sub i32 %total_V_2_10, %tmp_V_13

ST_15: total_V_2_12 [1/1] 4.22ns
.preheader:141  %total_V_2_12 = sub i32 %total_V_2_11, %tmp_V_14


 <State 16>: 0.00ns
ST_16: tmp_V_15 [1/1] 0.00ns
.preheader:38  %tmp_V_15 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_16: stg_101 [1/1] 0.00ns
.preheader:39  store i32 %tmp_V_15, i32* @inputdata_V_15, align 4


 <State 17>: 8.44ns
ST_17: tmp_V_16 [1/1] 0.00ns
.preheader:40  %tmp_V_16 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_17: stg_103 [1/1] 0.00ns
.preheader:41  store i32 %tmp_V_16, i32* @inputdata_V_16, align 16

ST_17: tmp16 [1/1] 4.22ns
.preheader:101  %tmp16 = add i32 %tmp_V_15, %tmp_V_16

ST_17: total_V_2_13 [1/1] 4.22ns
.preheader:142  %total_V_2_13 = sub i32 %total_V_2_12, %tmp_V_15

ST_17: total_V_2_14 [1/1] 4.22ns
.preheader:143  %total_V_2_14 = sub i32 %total_V_2_13, %tmp_V_16


 <State 18>: 0.00ns
ST_18: tmp_V_17 [1/1] 0.00ns
.preheader:42  %tmp_V_17 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_18: stg_108 [1/1] 0.00ns
.preheader:43  store i32 %tmp_V_17, i32* @inputdata_V_17, align 4


 <State 19>: 0.00ns
ST_19: tmp_V_18 [1/1] 0.00ns
.preheader:44  %tmp_V_18 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_19: stg_110 [1/1] 0.00ns
.preheader:45  store i32 %tmp_V_18, i32* @inputdata_V_18, align 8


 <State 20>: 16.88ns
ST_20: tmp_V_19 [1/1] 0.00ns
.preheader:46  %tmp_V_19 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_20: stg_112 [1/1] 0.00ns
.preheader:47  store i32 %tmp_V_19, i32* @inputdata_V_19, align 4

ST_20: tmp18 [1/1] 4.22ns
.preheader:102  %tmp18 = add i32 %tmp_V_18, %tmp_V_19

ST_20: tmp17 [1/1] 4.22ns
.preheader:103  %tmp17 = add i32 %tmp18, %tmp_V_17

ST_20: tmp15 [1/1] 4.22ns
.preheader:104  %tmp15 = add i32 %tmp17, %tmp16

ST_20: tmp10 [1/1] 4.22ns
.preheader:105  %tmp10 = add i32 %tmp15, %tmp11

ST_20: total_V_2_15 [1/1] 4.22ns
.preheader:144  %total_V_2_15 = sub i32 %total_V_2_14, %tmp_V_17

ST_20: total_V_2_16 [1/1] 4.22ns
.preheader:145  %total_V_2_16 = sub i32 %total_V_2_15, %tmp_V_18

ST_20: total_V_2_17 [1/1] 4.22ns
.preheader:146  %total_V_2_17 = sub i32 %total_V_2_16, %tmp_V_19


 <State 21>: 4.22ns
ST_21: tmp_V_20 [1/1] 0.00ns
.preheader:48  %tmp_V_20 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_21: stg_121 [1/1] 0.00ns
.preheader:49  store i32 %tmp_V_20, i32* @inputdata_V_20, align 16

ST_21: tmp [1/1] 4.22ns
.preheader:106  %tmp = add i32 %tmp10, %tmp1


 <State 22>: 8.44ns
ST_22: tmp_V_21 [1/1] 0.00ns
.preheader:50  %tmp_V_21 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_22: stg_124 [1/1] 0.00ns
.preheader:51  store i32 %tmp_V_21, i32* @inputdata_V_21, align 4

ST_22: tmp22 [1/1] 4.22ns
.preheader:107  %tmp22 = add i32 %tmp_V_20, %tmp_V_21

ST_22: total_V_2_18 [1/1] 4.22ns
.preheader:147  %total_V_2_18 = sub i32 %total_V_2_17, %tmp_V_20

ST_22: total_V_2_19 [1/1] 4.22ns
.preheader:148  %total_V_2_19 = sub i32 %total_V_2_18, %tmp_V_21


 <State 23>: 0.00ns
ST_23: tmp_V_22 [1/1] 0.00ns
.preheader:52  %tmp_V_22 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_23: stg_129 [1/1] 0.00ns
.preheader:53  store i32 %tmp_V_22, i32* @inputdata_V_22, align 8


 <State 24>: 0.00ns
ST_24: tmp_V_23 [1/1] 0.00ns
.preheader:54  %tmp_V_23 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_24: stg_131 [1/1] 0.00ns
.preheader:55  store i32 %tmp_V_23, i32* @inputdata_V_23, align 4


 <State 25>: 12.66ns
ST_25: tmp_V_24 [1/1] 0.00ns
.preheader:56  %tmp_V_24 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_25: stg_133 [1/1] 0.00ns
.preheader:57  store i32 %tmp_V_24, i32* @inputdata_V_24, align 16

ST_25: tmp24 [1/1] 4.22ns
.preheader:108  %tmp24 = add i32 %tmp_V_23, %tmp_V_24

ST_25: tmp23 [1/1] 4.22ns
.preheader:109  %tmp23 = add i32 %tmp24, %tmp_V_22

ST_25: tmp21 [1/1] 4.22ns
.preheader:110  %tmp21 = add i32 %tmp23, %tmp22

ST_25: total_V_2_20 [1/1] 4.22ns
.preheader:149  %total_V_2_20 = sub i32 %total_V_2_19, %tmp_V_22

ST_25: total_V_2_21 [1/1] 4.22ns
.preheader:150  %total_V_2_21 = sub i32 %total_V_2_20, %tmp_V_23

ST_25: total_V_2_22 [1/1] 4.22ns
.preheader:151  %total_V_2_22 = sub i32 %total_V_2_21, %tmp_V_24


 <State 26>: 0.00ns
ST_26: tmp_V_25 [1/1] 0.00ns
.preheader:58  %tmp_V_25 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_26: stg_141 [1/1] 0.00ns
.preheader:59  store i32 %tmp_V_25, i32* @inputdata_V_25, align 4


 <State 27>: 8.44ns
ST_27: tmp_V_26 [1/1] 0.00ns
.preheader:60  %tmp_V_26 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_27: stg_143 [1/1] 0.00ns
.preheader:61  store i32 %tmp_V_26, i32* @inputdata_V_26, align 8

ST_27: tmp26 [1/1] 4.22ns
.preheader:111  %tmp26 = add i32 %tmp_V_25, %tmp_V_26

ST_27: total_V_2_23 [1/1] 4.22ns
.preheader:152  %total_V_2_23 = sub i32 %total_V_2_22, %tmp_V_25

ST_27: total_V_2_24 [1/1] 4.22ns
.preheader:153  %total_V_2_24 = sub i32 %total_V_2_23, %tmp_V_26


 <State 28>: 0.00ns
ST_28: tmp_V_27 [1/1] 0.00ns
.preheader:62  %tmp_V_27 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_28: stg_148 [1/1] 0.00ns
.preheader:63  store i32 %tmp_V_27, i32* @inputdata_V_27, align 4


 <State 29>: 0.00ns
ST_29: tmp_V_28 [1/1] 0.00ns
.preheader:64  %tmp_V_28 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_29: stg_150 [1/1] 0.00ns
.preheader:65  store i32 %tmp_V_28, i32* @inputdata_V_28, align 16


 <State 30>: 16.88ns
ST_30: tmp_V_29 [1/1] 0.00ns
.preheader:66  %tmp_V_29 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_30: stg_152 [1/1] 0.00ns
.preheader:67  store i32 %tmp_V_29, i32* @inputdata_V_29, align 4

ST_30: tmp28 [1/1] 4.22ns
.preheader:112  %tmp28 = add i32 %tmp_V_28, %tmp_V_29

ST_30: tmp27 [1/1] 4.22ns
.preheader:113  %tmp27 = add i32 %tmp28, %tmp_V_27

ST_30: tmp25 [1/1] 4.22ns
.preheader:114  %tmp25 = add i32 %tmp27, %tmp26

ST_30: tmp20 [1/1] 4.22ns
.preheader:115  %tmp20 = add i32 %tmp25, %tmp21

ST_30: total_V_2_25 [1/1] 4.22ns
.preheader:154  %total_V_2_25 = sub i32 %total_V_2_24, %tmp_V_27

ST_30: total_V_2_26 [1/1] 4.22ns
.preheader:155  %total_V_2_26 = sub i32 %total_V_2_25, %tmp_V_28

ST_30: total_V_2_27 [1/1] 4.22ns
.preheader:156  %total_V_2_27 = sub i32 %total_V_2_26, %tmp_V_29


 <State 31>: 0.00ns
ST_31: tmp_V_30 [1/1] 0.00ns
.preheader:68  %tmp_V_30 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_31: stg_161 [1/1] 0.00ns
.preheader:69  store i32 %tmp_V_30, i32* @inputdata_V_30, align 8


 <State 32>: 8.44ns
ST_32: tmp_V_31 [1/1] 0.00ns
.preheader:70  %tmp_V_31 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_32: stg_163 [1/1] 0.00ns
.preheader:71  store i32 %tmp_V_31, i32* @inputdata_V_31, align 4

ST_32: tmp31 [1/1] 4.22ns
.preheader:116  %tmp31 = add i32 %tmp_V_30, %tmp_V_31

ST_32: total_V_2_28 [1/1] 4.22ns
.preheader:157  %total_V_2_28 = sub i32 %total_V_2_27, %tmp_V_30

ST_32: total_V_2_29 [1/1] 4.22ns
.preheader:158  %total_V_2_29 = sub i32 %total_V_2_28, %tmp_V_31


 <State 33>: 0.00ns
ST_33: tmp_V_32 [1/1] 0.00ns
.preheader:72  %tmp_V_32 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_33: stg_168 [1/1] 0.00ns
.preheader:73  store i32 %tmp_V_32, i32* @inputdata_V_32, align 16


 <State 34>: 0.00ns
ST_34: tmp_V_33 [1/1] 0.00ns
.preheader:74  %tmp_V_33 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_34: stg_170 [1/1] 0.00ns
.preheader:75  store i32 %tmp_V_33, i32* @inputdata_V_33, align 4


 <State 35>: 12.66ns
ST_35: tmp_V_34 [1/1] 0.00ns
.preheader:76  %tmp_V_34 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_35: stg_172 [1/1] 0.00ns
.preheader:77  store i32 %tmp_V_34, i32* @inputdata_V_34, align 8

ST_35: tmp33 [1/1] 4.22ns
.preheader:117  %tmp33 = add i32 %tmp_V_33, %tmp_V_34

ST_35: tmp32 [1/1] 4.22ns
.preheader:118  %tmp32 = add i32 %tmp33, %tmp_V_32

ST_35: tmp30 [1/1] 4.22ns
.preheader:119  %tmp30 = add i32 %tmp32, %tmp31

ST_35: total_V_2_30 [1/1] 4.22ns
.preheader:159  %total_V_2_30 = sub i32 %total_V_2_29, %tmp_V_32

ST_35: total_V_2_31 [1/1] 4.22ns
.preheader:160  %total_V_2_31 = sub i32 %total_V_2_30, %tmp_V_33

ST_35: total_V_2_32 [1/1] 4.22ns
.preheader:161  %total_V_2_32 = sub i32 %total_V_2_31, %tmp_V_34


 <State 36>: 0.00ns
ST_36: tmp_V_35 [1/1] 0.00ns
.preheader:78  %tmp_V_35 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_36: stg_180 [1/1] 0.00ns
.preheader:79  store i32 %tmp_V_35, i32* @inputdata_V_35, align 4


 <State 37>: 8.44ns
ST_37: tmp_V_36 [1/1] 0.00ns
.preheader:80  %tmp_V_36 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_37: stg_182 [1/1] 0.00ns
.preheader:81  store i32 %tmp_V_36, i32* @inputdata_V_36, align 16

ST_37: tmp35 [1/1] 4.22ns
.preheader:120  %tmp35 = add i32 %tmp_V_35, %tmp_V_36

ST_37: total_V_2_33 [1/1] 4.22ns
.preheader:162  %total_V_2_33 = sub i32 %total_V_2_32, %tmp_V_35

ST_37: total_V_2_34 [1/1] 4.22ns
.preheader:163  %total_V_2_34 = sub i32 %total_V_2_33, %tmp_V_36


 <State 38>: 0.00ns
ST_38: tmp_V_37 [1/1] 0.00ns
.preheader:82  %tmp_V_37 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_38: stg_187 [1/1] 0.00ns
.preheader:83  store i32 %tmp_V_37, i32* @inputdata_V_37, align 4


 <State 39>: 0.00ns
ST_39: tmp_V_38 [1/1] 0.00ns
.preheader:84  %tmp_V_38 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_39: stg_189 [1/1] 0.00ns
.preheader:85  store i32 %tmp_V_38, i32* @inputdata_V_38, align 8


 <State 40>: 16.88ns
ST_40: tmp_V_39 [1/1] 0.00ns
.preheader:86  %tmp_V_39 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %input_V_V)

ST_40: stg_191 [1/1] 0.00ns
.preheader:87  store i32 %tmp_V_39, i32* @inputdata_V_39, align 4

ST_40: tmp37 [1/1] 4.22ns
.preheader:121  %tmp37 = add i32 %tmp_V_38, %tmp_V_39

ST_40: tmp36 [1/1] 4.22ns
.preheader:122  %tmp36 = add i32 %tmp37, %tmp_V_37

ST_40: tmp34 [1/1] 4.22ns
.preheader:123  %tmp34 = add i32 %tmp36, %tmp35

ST_40: tmp29 [1/1] 4.22ns
.preheader:124  %tmp29 = add i32 %tmp34, %tmp30

ST_40: total_V_2_35 [1/1] 4.22ns
.preheader:164  %total_V_2_35 = sub i32 %total_V_2_34, %tmp_V_37

ST_40: total_V_2_36 [1/1] 4.22ns
.preheader:165  %total_V_2_36 = sub i32 %total_V_2_35, %tmp_V_38

ST_40: tmp_V [1/1] 4.22ns
.preheader:166  %tmp_V = sub i32 %total_V_2_36, %tmp_V_39


 <State 41>: 8.44ns
ST_41: tmp19 [1/1] 4.22ns
.preheader:125  %tmp19 = add i32 %tmp29, %tmp20

ST_41: tmp_V_41 [1/1] 4.22ns
.preheader:126  %tmp_V_41 = add i32 %tmp19, %tmp

ST_41: stg_201 [1/1] 0.00ns
.preheader:127  call void @_ssdm_op_Write.ap_fifo.volatile.i32P(i32* %output_V_V, i32 %tmp_V_41)


 <State 42>: 0.00ns
ST_42: stg_202 [1/1] 0.00ns
.preheader:0  call void (...)* @_ssdm_op_SpecInterface(i32* %output_V_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_42: stg_203 [1/1] 0.00ns
.preheader:1  call void (...)* @_ssdm_op_SpecInterface(i32* %input_V_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_42: stg_204 [1/1] 0.00ns
.preheader:2  call void (...)* @_ssdm_op_SpecBitsMap(i32* %input_V_V), !map !294

ST_42: stg_205 [1/1] 0.00ns
.preheader:3  call void (...)* @_ssdm_op_SpecBitsMap(i32* %output_V_V), !map !298

ST_42: stg_206 [1/1] 0.00ns
.preheader:4  call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @toplevel_str) nounwind

ST_42: stg_207 [1/1] 0.00ns
.preheader:5  call void (...)* @_ssdm_op_SpecIFCore(i32* %input_V_V, [1 x i8]* @p_str2, [11 x i8]* @p_str3, [1 x i8]* @p_str2, i32 -1, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2)

ST_42: stg_208 [1/1] 0.00ns
.preheader:6  call void (...)* @_ssdm_op_SpecIFCore(i32* %output_V_V, [1 x i8]* @p_str2, [11 x i8]* @p_str3, [1 x i8]* @p_str2, i32 -1, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2)

ST_42: stg_209 [1/1] 0.00ns
.preheader:7  call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind

ST_42: stg_210 [1/1] 0.00ns
.preheader:167  call void @_ssdm_op_Write.ap_fifo.volatile.i32P(i32* %output_V_V, i32 %tmp_V)

ST_42: stg_211 [1/1] 0.00ns
.preheader:168  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
